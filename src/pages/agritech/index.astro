---
import BaseLayout from "@components/base/BaseLayout.astro";
import agritechIcon from "@assets/blog/agritech.png";
import { Image } from "astro:assets";

const siteName = "農業合同会社 Webサイト";
const baseTitle = "農てっく!";
const baseDescription =
  "スマート農業やデジタル技術を活用した農業の最新情報をお届けします";

const firebaseConfig = {
  apiKey:
    import.meta.env.PUBLIC_FIREBASE_API_KEY ||
    "AIzaSyCkctZ3zzyHw0JEEf8w-wl_xVE-1lQLo7E",
  authDomain:
    import.meta.env.PUBLIC_FIREBASE_AUTH_DOMAIN ||
    "agricultural-llc.firebaseapp.com",
  databaseURL:
    import.meta.env.PUBLIC_FIREBASE_DATABASE_URL ||
    "https://agricultural-llc-default-rtdb.asia-southeast1.firebasedatabase.app",
  projectId:
    import.meta.env.PUBLIC_FIREBASE_PROJECT_ID || "agricultural-llc",
  storageBucket:
    import.meta.env.PUBLIC_FIREBASE_STORAGE_BUCKET ||
    "agricultural-llc.firebasestorage.app",
  messagingSenderId:
    import.meta.env.PUBLIC_FIREBASE_MESSAGING_SENDER_ID || "293681935404",
  appId:
    import.meta.env.PUBLIC_FIREBASE_APP_ID ||
    "1:293681935404:web:188089a29ff3da05490d89",
};
---

<BaseLayout title={`${baseTitle} | ${siteName}`} description={baseDescription}>
  <section class="section-sm">
    <div class="container">
      <div class="row">
        <div class="col-12 md:col-7 lg:col-8">
          <div class="glass rounded-lg p-8 text-center">
            <h1 class="text-3xl font-bold text-gray-900 dark:text-white">{baseTitle}</h1>
            <p class="mt-4 text-gray-600 dark:text-gray-300">{baseDescription}</p>
          </div>
        </div>
        <div class="hidden md:flex md:col-5 lg:col-4 items-center justify-center">
          <Image
            src={agritechIcon}
            alt="農てっく！アイコン"
            width={200}
            height={200}
            class="w-40 h-40 md:w-40 md:h-40 lg:w-60 lg:h-60 rounded-lg shadow-lg"
          />
        </div>
      </div>
    </div>
  </section>

  <section class="section" data-agritech-root>
    <div class="container">
      <div class="row w-full">
        <div class="col-12 lg:col-8">
          <div id="agri-loading" class="text-center py-12">
            <div class="inline-block animate-spin rounded-full h-12 w-12 border-b-2 border-green-600"></div>
            <p class="mt-4 text-gray-600">記事を読み込み中...</p>
          </div>

          <div id="agri-list-view" class="hidden">
            <div class="flex flex-col gap-4 md:flex-row md:items-center md:justify-between mb-6">
              <p class="text-gray-600">
                <span id="agri-list-count">0</span>件の記事を掲載しています
              </p>
              <label class="inline-flex items-center gap-2 text-sm text-gray-600">
                並び替え:
                <select
                  id="agri-sort-select"
                  class="px-3 py-1 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-green-500"
                >
                  <option value="date-desc">新しい順</option>
                  <option value="date-asc">古い順</option>
                  <option value="title">タイトル順</option>
                </select>
              </label>
            </div>

            <div id="agri-active-filters" class="hidden mb-4 flex flex-wrap gap-2 text-sm"></div>
            <div id="agri-posts-list" class="space-y-6"></div>
            <nav aria-label="ページネーション" class="flex justify-center mt-10">
              <ul class="flex gap-2" id="agri-pagination"></ul>
            </nav>
          </div>

          <div id="agri-detail-view" class="hidden">
            <article id="agri-detail-article" class="glass rounded-lg p-6 md:p-10"></article>
            <aside id="agri-detail-toc" class="mt-10 hidden"></aside>
            <section id="agri-related" class="mt-16 hidden">
              <h2 class="text-2xl font-bold text-gray-900 mb-6 text-center">関連記事</h2>
              <div id="agri-related-list" class="grid md:grid-cols-2 gap-6"></div>
            </section>
            <div class="mt-12 flex justify-center">
              <a href="/agritech/" class="inline-flex items-center gap-2 text-green-600 hover:text-green-800 transition-colors">
                <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16l-4-4m0 0l4-4m-4 4h18" />
                </svg>
                一覧に戻る
              </a>
            </div>
          </div>

          <div id="agri-empty" class="hidden text-center py-16 bg-white/60 backdrop-blur-sm border border-green-100/50 rounded-xl">
            <svg class="mx-auto h-12 w-12 text-gray-400 mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z" />
            </svg>
            <p class="text-gray-500 mb-4">まだ記事がありません</p>
            <p class="text-sm text-gray-400">新しい記事が追加されるまでお待ちください</p>
          </div>

          <div id="agri-not-found" class="hidden text-center py-16 bg-white/60 backdrop-blur-sm border border-green-100/50 rounded-xl">
            <svg class="mx-auto h-12 w-12 text-gray-400 mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
            <p class="text-gray-500 mb-4">お探しの記事が見つかりませんでした</p>
            <p class="text-sm text-gray-400">URLをご確認いただくか、一覧に戻って再度お探しください</p>
            <div class="mt-6 flex justify-center gap-4">
              <a href="/agritech/" class="px-6 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors">一覧へ戻る</a>
              <a href="/" class="px-6 py-3 bg-gray-200 text-gray-800 rounded-lg hover:bg-gray-300 transition-colors">ホームへ戻る</a>
            </div>
          </div>
        </div>

        <div class="col-12 lg:col-4 mt-10 lg:mt-0 lg:pl-8">
          <aside id="agri-sidebar" class="glass rounded-lg p-6 sticky top-24">
            <h2 class="text-lg font-semibold text-gray-900 mb-4 flex items-center gap-2">
              <svg class="w-5 h-5 text-green-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6l4 2" />
              </svg>
              カテゴリー
            </h2>
            <div id="agri-categories" class="flex flex-wrap gap-2 mb-8"></div>

            <h2 class="text-lg font-semibold text-gray-900 mb-4 flex items-center gap-2">
              <svg class="w-5 h-5 text-green-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 7h18M3 12h18M3 17h18" />
              </svg>
              タグ
            </h2>
            <div id="agri-tags" class="flex flex-wrap gap-2"></div>
          </aside>
        </div>
      </div>

      <noscript>
        <div class="mt-10 text-center py-16 bg-red-50 border border-red-200 rounded-xl">
          <p class="text-red-700 font-medium mb-2">JavaScriptが無効になっています</p>
          <p class="text-sm text-red-600">最新の記事を表示するには、ブラウザの設定でJavaScriptを有効にしてください。</p>
        </div>
      </noscript>
    </div>
  </section>
</BaseLayout>

<script
  type="module"
  define:vars={{ firebaseConfig, baseDescription, baseTitle, siteName }}
>
  import { initializeApp, getApps, getApp } from "https://www.gstatic.com/firebasejs/10.7.1/firebase-app.js";
  import { getDatabase, ref, get } from "https://www.gstatic.com/firebasejs/10.7.1/firebase-database.js";
  import { marked } from "https://cdn.jsdelivr.net/npm/marked@11.1.1/lib/marked.esm.js";

  const RUNNER_KEY = "__agritechPageInstance";
  const ITEMS_PER_PAGE = 6;

  marked.setOptions({
    gfm: true,
    breaks: true,
    mangle: false,
    headerIds: false,
  });

  function getFirebaseApp() {
    if (!getApps().length) {
      initializeApp(firebaseConfig);
    }
    return getApp();
  }

  function createSlug(text) {
    if (!text) return "";
    return String(text)
      .trim()
      .toLowerCase()
      .replace(/[\s_]+/g, '-')
      .replace(/[^a-z0-9\-\u3040-\u30ff\u3400-\u9fff\uff66-\uff9f\u30fc]+/g, '')
      .replace(/-+/g, '-')
      .replace(/^-|-$/g, '');
  }

  function markdownToHtml(markdown) {
    const html = marked.parse(markdown || "");
    const template = document.createElement('template');
    template.innerHTML = html;

    const slugCounts = new Map();
    template.content.querySelectorAll('h1, h2, h3, h4, h5, h6').forEach((heading) => {
      const baseSlug = createSlug(heading.textContent || '');
      const count = slugCounts.get(baseSlug) || 0;
      const finalSlug = baseSlug ? (count ? `${baseSlug}-${count}` : baseSlug) : `section-${count + 1}`;
      slugCounts.set(baseSlug, count + 1);
      heading.id = finalSlug;
    });

    return template.innerHTML;
  }

  function markdownToPlain(markdown) {
    const html = marked.parse(markdown || "");
    const template = document.createElement('template');
    template.innerHTML = html;
    const text = template.content.textContent || "";
    return text.replace(/\s+/g, ' ').trim();
  }

  function extractHeadings(markdown) {
    const headings = [];
    const regex = /^(#{1,6})\s+(.+)$/gm;
    const slugCounts = new Map();
    let match;
    while ((match = regex.exec(markdown || '')) !== null) {
      const depth = match[1].length;
      const textContent = match[2].trim();
      const baseSlug = createSlug(textContent);
      const count = slugCounts.get(baseSlug) || 0;
      const finalSlug = baseSlug ? (count ? `${baseSlug}-${count}` : baseSlug) : `section-${count + 1}`;
      slugCounts.set(baseSlug, count + 1);
      headings.push({ depth, text: textContent, slug: finalSlug });
    }
    return headings;
  }

  function normalizeEntry(id, raw) {
    if (!raw || typeof raw !== 'object') return null;

    const toStringSafe = (value) =>
      typeof value === 'string' ? value : value != null ? String(value) : '';
    const toArraySafe = (value) => {
      if (Array.isArray(value)) {
        return value.filter((item) => item != null).map((item) => String(item));
      }
      return value != null ? [String(value)] : [];
    };

    return {
      id,
      slug: toStringSafe(raw.slug) || id,
      title: toStringSafe(raw.title),
      description: toStringSafe(raw.description),
      body: toStringSafe(raw.body),
      date: toStringSafe(raw.date),
      image: toStringSafe(raw.image),
      authors: toArraySafe(raw.authors),
      categories: toArraySafe(raw.categories),
      tags: toArraySafe(raw.tags),
      draft: Boolean(raw.draft),
      updatedAt: toStringSafe(raw.updatedAt),
    };
  }

  class AgritechPage {
    constructor(root) {
      this.root = root;
      this.database = getDatabase(getFirebaseApp());
      this.state = {
        allEntries: [],
        filteredEntries: [],
        currentPage: 1,
        currentCategory: 'all',
        currentTag: 'all',
        currentSort: 'date-desc',
      };
      this.controller = new AbortController();
      this.elements = this.queryElements();
    }

    destroy() {
      this.controller.abort();
    }

    queryElements() {
      return {
        loading: this.root.querySelector('#agri-loading'),
        listView: this.root.querySelector('#agri-list-view'),
        detailView: this.root.querySelector('#agri-detail-view'),
        emptyView: this.root.querySelector('#agri-empty'),
        notFoundView: this.root.querySelector('#agri-not-found'),
        listCount: this.root.querySelector('#agri-list-count'),
        postsList: this.root.querySelector('#agri-posts-list'),
        pagination: this.root.querySelector('#agri-pagination'),
        sortSelect: this.root.querySelector('#agri-sort-select'),
        activeFilters: this.root.querySelector('#agri-active-filters'),
        sidebarCategories: this.root.querySelector('#agri-categories'),
        sidebarTags: this.root.querySelector('#agri-tags'),
        detailArticle: this.root.querySelector('#agri-detail-article'),
        detailToc: this.root.querySelector('#agri-detail-toc'),
        relatedSection: this.root.querySelector('#agri-related'),
        relatedList: this.root.querySelector('#agri-related-list'),
      };
    }

    getRouteInfo() {
      const basePath = '/agritech';
      const path = window.location.pathname.replace(/\/+$/, '');
      let suffix = '';
      if (path.startsWith(basePath)) {
        suffix = decodeURIComponent(path.slice(basePath.length)).replace(/^\/+/, '');
      }

      if (!suffix) {
        return { mode: 'list' };
      }
      if (suffix.startsWith('categories/')) {
        return { mode: 'category', value: suffix.slice('categories/'.length).replace(/\/+$/, '') };
      }
      if (suffix.startsWith('tags/')) {
        return { mode: 'tag', value: suffix.slice('tags/'.length).replace(/\/+$/, '') };
      }
      if (suffix.startsWith('page/')) {
        const pageValue = Number(suffix.slice('page/'.length).replace(/\/+$/, ''));
        return { mode: 'page', page: Number.isFinite(pageValue) && pageValue > 0 ? pageValue : 1 };
      }
      return { mode: 'detail', slug: suffix };
    }

    setView(view) {
      const { loading, listView, detailView, emptyView, notFoundView } = this.elements;
      if (loading) loading.classList.toggle('hidden', view !== 'loading');
      if (listView) listView.classList.toggle('hidden', view !== 'list');
      if (detailView) detailView.classList.toggle('hidden', view !== 'detail');
      if (emptyView) emptyView.classList.toggle('hidden', view !== 'empty');
      if (notFoundView) notFoundView.classList.toggle('hidden', view !== 'notFound');
    }

    bindEvents() {
      this.controller.abort();
      this.controller = new AbortController();
      const signal = this.controller.signal;
      const { sortSelect, pagination } = this.elements;

      sortSelect?.addEventListener('change', (event) => {
        const target = event.target;
        if (!(target instanceof HTMLSelectElement)) return;
        this.state.currentSort = target.value;
        this.state.currentPage = 1;
        this.renderListView();
        const url = new URL(window.location.href);
        if (this.state.currentSort === 'date-desc') {
          url.searchParams.delete('sort');
        } else {
          url.searchParams.set('sort', this.state.currentSort);
        }
        history.replaceState({}, '', url.toString());
      }, { signal });

      pagination?.addEventListener('click', (event) => {
        const target = event.target;
        if (!(target instanceof HTMLElement)) return;
        const button = target.closest('button');
        if (!(button instanceof HTMLButtonElement) || button.disabled) return;

        if (button.classList.contains('pagination-prev')) {
          this.state.currentPage = Math.max(1, this.state.currentPage - 1);
        } else if (button.classList.contains('pagination-next')) {
          const totalPages = Math.ceil(this.state.filteredEntries.length / ITEMS_PER_PAGE);
          this.state.currentPage = Math.min(totalPages, this.state.currentPage + 1);
        } else if (button.dataset.page) {
          this.state.currentPage = Number(button.dataset.page);
        }

        this.renderListView();
        window.scrollTo({ top: 0, behavior: 'smooth' });
      }, { signal });
    }

    renderSidebar() {
      const { sidebarCategories, sidebarTags } = this.elements;
      if (sidebarCategories) {
        const categoryCounts = new Map();
        this.state.allEntries.forEach((entry) => {
          (entry.categories || []).forEach((category) => {
            categoryCounts.set(category, (categoryCounts.get(category) || 0) + 1);
          });
        });
        const categories = [...categoryCounts.entries()].sort((a, b) => a[0].localeCompare(b[0], 'ja'));
        sidebarCategories.innerHTML = categories.length
          ? categories.map(([category, count]) => {
              const href = `/agritech/categories/${encodeURIComponent(category)}/`;
              return `<a href="${href}" class="inline-flex items-center justify-between gap-2 px-3 py-1 rounded-full text-sm border border-green-200 bg-white hover:bg-green-50">
                <span>${category}</span>
                <span class="text-xs text-gray-500">${count}</span>
              </a>`;
            }).join('')
          : '<p class="text-sm text-gray-500">カテゴリーがまだありません</p>';
      }

      if (sidebarTags) {
        const tagCounts = new Map();
        this.state.allEntries.forEach((entry) => {
          (entry.tags || []).forEach((tag) => {
            tagCounts.set(tag, (tagCounts.get(tag) || 0) + 1);
          });
        });
        const tags = [...tagCounts.entries()].sort((a, b) => a[0].localeCompare(b[0], 'ja'));
        sidebarTags.innerHTML = tags.length
          ? tags.map(([tag, count]) => {
              const href = `/agritech/tags/${encodeURIComponent(tag)}/`;
              return `<a href="${href}" class="inline-flex items-center gap-2 px-3 py-1 rounded-full text-sm border border-green-200 bg-white hover:bg-green-50">
                <span>#${tag}</span>
                <span class="text-xs text-gray-500">${count}</span>
              </a>`;
            }).join('')
          : '<p class="text-sm text-gray-500">タグがまだありません</p>';
      }
    }

    renderActiveFilters() {
      const { activeFilters } = this.elements;
      if (!activeFilters) return;

      const chips = [];
      if (this.state.currentCategory !== 'all') {
        chips.push(`<a href="/agritech/" class="inline-flex items-center gap-1 px-3 py-1 rounded-full bg-green-100 text-green-800 text-sm hover:bg-green-200">
          カテゴリー: ${this.state.currentCategory}
          <span aria-hidden="true">×</span>
        </a>`);
      }
      if (this.state.currentTag !== 'all') {
        chips.push(`<a href="/agritech/" class="inline-flex items-center gap-1 px-3 py-1 rounded-full bg-green-100 text-green-800 text-sm hover:bg-green-200">
          タグ: ${this.state.currentTag}
          <span aria-hidden="true">×</span>
        </a>`);
      }

      if (!chips.length) {
        activeFilters.classList.add('hidden');
        activeFilters.innerHTML = '';
        return;
      }

      activeFilters.classList.remove('hidden');
      activeFilters.innerHTML = chips.join('');
    }

    applyFilters() {
      let entries = [...this.state.allEntries];
      if (this.state.currentCategory !== 'all') {
        entries = entries.filter((entry) => entry.categories.includes(this.state.currentCategory));
      }
      if (this.state.currentTag !== 'all') {
        entries = entries.filter((entry) => entry.tags.includes(this.state.currentTag));
      }

      return entries.sort((a, b) => {
        switch (this.state.currentSort) {
          case 'date-asc':
            return new Date(a.date).getTime() - new Date(b.date).getTime();
          case 'title':
            return (a.title || '').localeCompare(b.title || '', 'ja');
          default:
            return new Date(b.date).getTime() - new Date(a.date).getTime();
        }
      });
    }

    renderPosts() {
      const { postsList, listCount } = this.elements;
      if (!postsList) return;

      if (listCount) listCount.textContent = String(this.state.filteredEntries.length);

      const totalPages = Math.max(1, Math.ceil(this.state.filteredEntries.length / ITEMS_PER_PAGE));
      if (this.state.currentPage > totalPages) {
        this.state.currentPage = totalPages;
      }

      const startIndex = (this.state.currentPage - 1) * ITEMS_PER_PAGE;
      const endIndex = startIndex + ITEMS_PER_PAGE;
      const visibleEntries = this.state.filteredEntries.slice(startIndex, endIndex);

      postsList.innerHTML = visibleEntries.map((entry) => {
        const href = `/agritech/${entry.slug}/`;
        const dateDisplay = entry.date ? new Date(entry.date).toLocaleDateString('ja-JP') : '';
        const datetimeAttr = entry.date ? new Date(entry.date).toISOString() : '';
        return `
          <div class="mb-6">
            <a href="${href}" class="block glass rounded-lg overflow-hidden hover:shadow-lg transition-shadow">
              <article class="p-6">
                <h2 class="text-2xl font-bold mb-2 dark:text-white">${entry.title || ''}</h2>
                <p class="text-gray-600 dark:text-gray-300 mb-4">${entry.description || ''}</p>
                <div class="flex flex-wrap gap-2 text-sm text-gray-500">
                  ${dateDisplay ? `<span><time datetime="${datetimeAttr}">${dateDisplay}</time></span>` : ''}
                  ${(entry.categories || []).map((cat) => `<span class="px-2 py-1 bg-green-100 text-green-800 rounded">${cat}</span>`).join('')}
                </div>
              </article>
            </a>
          </div>
        `;
      }).join('');
    }

    renderPagination() {
      const { pagination } = this.elements;
      if (!pagination) return;

      const totalPages = Math.ceil(this.state.filteredEntries.length / ITEMS_PER_PAGE);
      if (totalPages <= 1) {
        pagination.innerHTML = '';
        return;
      }

      const pages = Array.from({ length: totalPages }, (_, index) => index + 1);
      pagination.innerHTML = `
        <li>
          <button class="pagination-prev px-3 py-2 rounded-md bg-white text-gray-700 border border-gray-300 hover:bg-gray-50 ${this.state.currentPage === 1 ? 'opacity-50 cursor-not-allowed' : ''}" ${this.state.currentPage === 1 ? 'disabled' : ''}>
            <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
            </svg>
          </button>
        </li>
        ${pages.map((page) => `
          <li>
            <button data-page="${page}" class="pagination-btn px-4 py-2 rounded-md ${page === this.state.currentPage ? 'bg-green-600 text-white' : 'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50'}">
              ${page}
            </button>
          </li>
        `).join('')}
        <li>
          <button class="pagination-next px-3 py-2 rounded-md bg-white text-gray-700 border border-gray-300 hover:bg-gray-50 ${this.state.currentPage === totalPages ? 'opacity-50 cursor-not-allowed' : ''}" ${this.state.currentPage === totalPages ? 'disabled' : ''}>
            <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
            </svg>
          </button>
        </li>
      `;
    }

    renderListView() {
      const { sortSelect } = this.elements;
      this.renderSidebar();
      this.renderActiveFilters();
      this.state.filteredEntries = this.applyFilters();

      if (sortSelect) sortSelect.value = this.state.currentSort;

      if (!this.state.filteredEntries.length) {
        this.setView('empty');
        const { listCount } = this.elements;
        if (listCount) listCount.textContent = '0';
        return;
      }

      this.renderPosts();
      this.renderPagination();
      this.setView('list');
    }

    renderDetail(entry) {
      const { detailArticle, detailToc, relatedSection } = this.elements;
      if (!detailArticle) return;

      const formattedDate = entry.date ? new Date(entry.date).toLocaleDateString('ja-JP', {
        year: 'numeric',
        month: 'long',
        day: 'numeric',
      }) : '';
      const dateIso = entry.date ? new Date(entry.date).toISOString() : '';

      detailArticle.innerHTML = `
        <header class="mb-10">
          <h1 class="text-3xl lg:text-4xl font-bold text-gray-900 mb-6">${entry.title || ''}</h1>
          <div class="flex flex-wrap items-center gap-4 text-sm text-gray-600">
            ${formattedDate ? `<time datetime="${dateIso}">${formattedDate}</time>` : ''}
            ${(entry.categories || []).map((category) => `<span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-green-100 text-green-800">${category}</span>`).join('')}
            ${(entry.tags || []).map((tag) => `<span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800">#${tag}</span>`).join('')}
          </div>
        </header>
        ${entry.image ? `
          <figure class="mb-10">
            <img
              src="${entry.image}"
              alt="${entry.title || ''}"
              class="w-full rounded-lg shadow-lg"
              loading="eager"
            />
          </figure>
        ` : ''}
        <div class="prose prose-lg max-w-none mb-10">
          <div>${markdownToHtml(entry.body || '')}</div>
        </div>
      `;

      const headings = extractHeadings(entry.body || '');
      if (detailToc) {
        if (!headings.length) {
          detailToc.classList.add('hidden');
          detailToc.innerHTML = '';
        } else {
          detailToc.classList.remove('hidden');
          detailToc.innerHTML = `
            <div class="glass rounded-lg p-6">
              <h2 class="text-lg font-semibold text-gray-900 mb-4">目次</h2>
              <ul class="space-y-2 text-sm text-gray-700">
                ${headings.map((heading) => `
                  <li style="margin-left: ${(heading.depth - 1) * 12}px">
                    <a href="#${heading.slug}" class="hover:text-green-600">
                      ${heading.text}
                    </a>
                  </li>
                `).join('')}
              </ul>
            </div>
          `;
        }
      }

      this.renderRelated(entry);
      if (relatedSection) relatedSection.classList.toggle('hidden', !this.relatedHasContent);

      const description = entry.description || markdownToPlain(entry.body || '').slice(0, 140);
      updateHeadForDetail(entry, description);
      this.setView('detail');
    }

    renderRelated(currentEntry) {
      const { relatedSection, relatedList } = this.elements;
      this.relatedHasContent = false;
      if (!relatedSection || !relatedList) return;

      const related = this.state.allEntries
        .filter((entry) => entry.id !== currentEntry.id)
        .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())
        .slice(0, 3);

      if (!related.length) {
        relatedSection.classList.add('hidden');
        relatedList.innerHTML = '';
        return;
      }

      this.relatedHasContent = true;
      relatedSection.classList.remove('hidden');
      relatedList.innerHTML = related.map((entry) => {
        const href = `/agritech/${entry.slug}/`;
        const dateDisplay = entry.date ? new Date(entry.date).toLocaleDateString('ja-JP') : '';
        const datetimeAttr = entry.date ? new Date(entry.date).toISOString() : '';
        return `
          <article class="glass rounded-lg p-6 hover:shadow-lg transition-shadow">
            <a href="${href}" class="block">
              <h3 class="text-xl font-semibold text-gray-900 mb-3">${entry.title || ''}</h3>
              <p class="text-gray-600 mb-4">${entry.description || ''}</p>
              <div class="flex flex-wrap gap-2 text-sm text-gray-500">
                ${dateDisplay ? `<span><time datetime="${datetimeAttr}">${dateDisplay}</time></span>` : ''}
                ${(entry.categories || []).map((cat) => `<span class="px-2 py-1 bg-green-100 text-green-800 rounded">${cat}</span>`).join('')}
              </div>
            </a>
          </article>
        `;
      }).join('');
    }

    async loadRoute() {
      this.setView('loading');
      try {
        const snapshot = await get(ref(this.database, 'cms/blog'));
        if (!snapshot.exists()) {
          resetState();
          this.setView('empty');
          return;
        }

        const raw = snapshot.val();
        this.state.allEntries = Object.entries(raw)
          .map(([id, value]) => normalizeEntry(id, value))
          .filter((entry) => entry && !entry.draft)
          .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());

        if (!this.state.allEntries.length) {
          resetState();
          this.setView('empty');
          return;
        }

        const route = this.getRouteInfo();
        const url = new URL(window.location.href);
        const requestedSort = url.searchParams.get('sort');
        if (requestedSort && ['date-desc', 'date-asc', 'title'].includes(requestedSort)) {
          this.state.currentSort = requestedSort;
        } else {
          this.state.currentSort = 'date-desc';
        }

        if (route.mode === 'detail') {
          const entry = this.state.allEntries.find((item) => item.slug === route.slug || item.id === route.slug);
          if (!entry) {
            this.setView('notFound');
            return;
          }
          this.renderDetail(entry);
          return;
        }

        this.state.currentCategory = 'all';
        this.state.currentTag = 'all';

        if (route.mode === 'category') {
          this.state.currentCategory = route.value || 'all';
        } else if (route.mode === 'tag') {
          this.state.currentTag = route.value || 'all';
        }

        this.state.currentPage = route.mode === 'page' ? route.page || 1 : 1;

        this.renderListView();
      } catch (error) {
        console.error('Failed to load agritech entries:', error);
        this.setView('notFound');
      }
    }

    init() {
      const { postsList, detailArticle } = this.elements;
      if (!postsList || !detailArticle) return;
      this.bindEvents();
      this.loadRoute();
    }
  }

  function startAgritechPage() {
    const root = document.querySelector('[data-agritech-root]');
    if (!root) {
      if (window[RUNNER_KEY]) {
        window[RUNNER_KEY].destroy();
        window[RUNNER_KEY] = null;
      }
      return;
    }

    if (window[RUNNER_KEY]) {
      window[RUNNER_KEY].destroy();
    }

    const page = new AgritechPage(root);
    window[RUNNER_KEY] = page;
    page.init();
  }

  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', startAgritechPage, { once: true });
  } else {
    startAgritechPage();
  }

  document.addEventListener('astro:page-load', startAgritechPage);
</script>



<style>
  .glass {
    backdrop-filter: blur(12px);
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.85), rgba(245, 255, 245, 0.85));
    border: 1px solid rgba(56, 142, 60, 0.15);
  }
</style>
