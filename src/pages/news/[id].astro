---
import BaseLayout from "@components/base/BaseLayout.astro";
import { getFirebaseNewsEntry, getFirebaseNewsEntries, getLatestNewsEntries } from "@lib/newsLoader";
import { incrementNewsViews } from "@lib/cms/operations";
import { markdownify } from "@lib/textConverter";
import { Image } from "astro:assets";
import NewsCard from "@components/news/NewsCard.astro";

export async function getStaticPaths() {
  const entries = await getFirebaseNewsEntries();

  return entries
    .filter(entry => !entry.draft)
    .map(entry => ({
      params: { id: entry.id || entry.slug },
      props: { entry }
    }));
}

const { id } = Astro.params;
const { entry } = Astro.props;

let relatedNews = [];
try {
  const allNews = await getLatestNewsEntries(6);
  relatedNews = allNews.filter(news => news.id !== id).slice(0, 3);
} catch (error) {
  console.error('Error loading related news:', error);
}

try {
  await incrementNewsViews(id);
} catch (error) {
  console.error('Error incrementing views:', error);
}

const formattedDate = new Date(entry.date).toLocaleDateString('ja-JP', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
});
---

<BaseLayout>
  <article class="py-16">
    <div class="container">
      <div class="row justify-center">
        <div class="lg:col-10 xl:col-8">

          <nav class="mb-8" aria-label="パンくずリスト">
            <ol class="flex items-center space-x-2 text-sm text-gray-600">
              <li><a href="/" class="hover:text-purple-600 transition-colors">ホーム</a></li>
              <li><span class="mx-2">/</span></li>
              <li><a href="/news/" class="hover:text-purple-600 transition-colors">ニュース</a></li>
              <li><span class="mx-2">/</span></li>
              <li class="text-gray-900 font-medium">{entry.title}</li>
            </ol>
          </nav>

          <header class="mb-10">
            <div class="flex items-center gap-3 mb-6">
              {entry.featured && (
                <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-purple-100 text-purple-800">
                  特集記事
                </span>
              )}
              {entry.categories && entry.categories.map((category) => (
                <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800">
                  {category}
                </span>
              ))}
            </div>

            <h1 class="text-3xl lg:text-4xl font-bold text-gray-900 mb-6">
              {entry.title}
            </h1>

            <div class="flex flex-wrap items-center gap-4 text-sm text-gray-600">
              <time datetime={entry.date} class="flex items-center gap-1">
                <svg class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                </svg>
                {formattedDate}
              </time>

              {entry.source && (
                <span class="flex items-center gap-1">
                  <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                    <path d="M2 5a2 2 0 012-2h12a2 2 0 012 2v10a2 2 0 01-2 2H4a2 2 0 01-2-2V5zm3.293 1.293a1 1 0 011.414 0l3 3a1 1 0 010 1.414l-3 3a1 1 0 01-1.414-1.414L7.586 10 5.293 7.707a1 1 0 010-1.414zM11 12a1 1 0 100 2h3a1 1 0 100-2h-3z" />
                  </svg>
                  {entry.source}
                </span>
              )}

              {entry.views !== undefined && (
                <span class="flex items-center gap-1">
                  <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                    <path d="M10 12a2 2 0 100-4 2 2 0 000 4z" />
                    <path fill-rule="evenodd" d="M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z" clip-rule="evenodd" />
                  </svg>
                  {entry.views + 1} views
                </span>
              )}

              {entry.authors && (
                <span class="flex items-center gap-1">
                  <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd" />
                  </svg>
                  {Array.isArray(entry.authors) ? entry.authors.join(', ') : entry.authors}
                </span>
              )}
            </div>
          </header>

          {entry.image && (
            <figure class="mb-10">
              <img
                src={entry.image}
                alt={entry.title}
                class="w-full rounded-lg shadow-lg"
                loading="eager"
              />
            </figure>
          )}

          {entry.description && (
            <div class="mb-8 p-6 bg-gray-50 rounded-lg border-l-4 border-purple-500">
              <p class="text-lg text-gray-700 leading-relaxed">
                {entry.description}
              </p>
            </div>
          )}

          <div class="prose prose-lg max-w-none mb-10">
            <div set:html={markdownify(entry.body || '')} />
          </div>

          {entry.externalLink && (
            <div class="mb-10 p-4 bg-blue-50 rounded-lg border border-blue-200">
              <p class="text-sm text-blue-800 mb-2">外部リンク：</p>
              <a href={entry.externalLink} target="_blank" rel="noopener noreferrer"
                 class="text-blue-600 hover:text-blue-800 underline inline-flex items-center gap-1">
                {entry.externalLink}
                <svg class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
                </svg>
              </a>
            </div>
          )}

          {entry.tags && entry.tags.length > 0 && (
            <div class="flex flex-wrap gap-2 mb-10">
              {entry.tags.map((tag) => (
                <span class="px-3 py-1 bg-gray-100 text-gray-700 text-sm rounded-full">
                  #{tag}
                </span>
              ))}
            </div>
          )}

          <div class="border-t border-gray-200 pt-8">
            <a href="/news/" class="inline-flex items-center gap-2 text-purple-600 hover:text-purple-800 transition-colors">
              <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16l-4-4m0 0l4-4m-4 4h18" />
              </svg>
              ニュース一覧に戻る
            </a>
          </div>
        </div>
      </div>

      {relatedNews.length > 0 && (
        <div class="row justify-center mt-16">
          <div class="lg:col-10">
            <h2 class="text-2xl font-bold text-gray-900 mb-8 text-center">関連ニュース</h2>
            <div class="row g-4">
              {relatedNews.map((news) => (
                <div class="md:col-6 lg:col-4">
                  <NewsCard news={news} />
                </div>
              ))}
            </div>
          </div>
        </div>
      )}
    </div>
  </article>
</BaseLayout>