---
import BaseLayout from "@components/base/BaseLayout.astro";

const siteName = "農業合同会社 Webサイト";
const baseTitle = "ニュース";
const baseDescription = "農業DXに関する最新情報をお届けします";

const firebaseConfig = {
  apiKey:
    import.meta.env.PUBLIC_FIREBASE_API_KEY ||
    "AIzaSyCkctZ3zzyHw0JEEf8w-wl_xVE-1lQLo7E",
  authDomain:
    import.meta.env.PUBLIC_FIREBASE_AUTH_DOMAIN ||
    "agricultural-llc.firebaseapp.com",
  databaseURL:
    import.meta.env.PUBLIC_FIREBASE_DATABASE_URL ||
    "https://agricultural-llc-default-rtdb.asia-southeast1.firebasedatabase.app",
  projectId:
    import.meta.env.PUBLIC_FIREBASE_PROJECT_ID || "agricultural-llc",
  storageBucket:
    import.meta.env.PUBLIC_FIREBASE_STORAGE_BUCKET ||
    "agricultural-llc.firebasestorage.app",
  messagingSenderId:
    import.meta.env.PUBLIC_FIREBASE_MESSAGING_SENDER_ID || "293681935404",
  appId:
    import.meta.env.PUBLIC_FIREBASE_APP_ID ||
    "1:293681935404:web:188089a29ff3da05490d89",
};
---

<BaseLayout title={`${baseTitle} | ${siteName}`} description={baseDescription}>
  <section class="py-16 min-h-screen">
    <div class="container">
      <nav class="mb-8" aria-label="パンくずリスト">
        <ol class="flex items-center space-x-2 text-sm text-gray-600">
          <li><a href="/" class="hover:text-purple-600 transition-colors">ホーム</a></li>
          <li><span class="mx-2">/</span></li>
          <li class="text-gray-900 font-medium" id="breadcrumb-current">ニュース</li>
        </ol>
      </nav>

      <div class="row justify-center mb-10">
        <div class="md:col-10 lg:col-8 text-center">
          <h1 id="page-title" class="text-3xl lg:text-4xl font-bold text-gray-900 mb-4">
            ニュース
          </h1>
          <p id="page-description" class="text-lg text-gray-600">
            農業DXに関する最新情報をお届けします
          </p>
        </div>
      </div>

      <div id="news-loading" class="text-center py-12">
        <div class="inline-block animate-spin rounded-full h-12 w-12 border-b-2 border-purple-600"></div>
        <p class="mt-4 text-gray-600">ニュースを読み込み中...</p>
      </div>

      <div id="news-list-view" class="hidden">
        <div class="row justify-center mb-8">
          <div class="lg:col-10">
            <div class="flex flex-wrap justify-center gap-2" id="category-filters"></div>
          </div>
        </div>

        <div class="row justify-center mb-4">
          <div class="lg:col-10 flex flex-col gap-3 md:flex-row md:items-center md:justify-between">
            <p class="text-gray-600 text-sm md:text-base">
              <span id="showing-count">0</span>件 / 全<span id="total-count">0</span>件を表示
            </p>
            <label class="inline-flex items-center gap-2 text-sm text-gray-600">
              並び替え:
              <select
                id="sort-select"
                class="px-3 py-1 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-purple-500"
              >
                <option value="date-desc">新しい順</option>
                <option value="date-asc">古い順</option>
                <option value="priority">優先度順</option>
                <option value="views">閲覧数順</option>
              </select>
            </label>
          </div>
        </div>

        <div class="row justify-center" id="news-grid">
          <div class="lg:col-10">
            <div id="news-list" class="grid md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8"></div>
          </div>
        </div>

        <div class="row justify-center">
          <div class="lg:col-10">
            <nav aria-label="ページネーション" class="flex justify-center">
              <ul class="flex gap-2" id="pagination"></ul>
            </nav>
          </div>
        </div>
      </div>

      <div id="news-detail-view" class="hidden">
        <article class="row justify-center">
          <div class="lg:col-10 xl:col-8">
            <div id="news-detail-content" class="prose prose-lg max-w-none text-gray-800"></div>
          </div>
        </article>

        <div id="related-news-section" class="row justify-center mt-16 hidden">
          <div class="lg:col-10">
            <h2 class="text-2xl font-bold text-gray-900 mb-8 text-center">関連ニュース</h2>
            <div id="related-news-list" class="grid md:grid-cols-2 lg:grid-cols-3 gap-6"></div>
          </div>
        </div>

        <div class="mt-12 flex justify-center">
          <a href="/news/" class="inline-flex items-center gap-2 text-purple-600 hover:text-purple-800 transition-colors">
            <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16l-4-4m0 0l4-4m-4 4h18" />
            </svg>
            ニュース一覧に戻る
          </a>
        </div>
      </div>

      <div id="news-not-found" class="hidden row justify-center">
        <div class="lg:col-8">
          <div class="text-center py-16 bg-white/60 backdrop-blur-sm border border-purple-100/50 rounded-xl">
            <svg class="mx-auto h-12 w-12 text-gray-400 mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
            <p class="text-gray-500 mb-4">お探しの記事が見つかりませんでした</p>
            <p class="text-sm text-gray-400">URLをご確認いただくか、ニュース一覧に戻って再度お探しください。</p>
            <div class="mt-6 flex justify-center gap-4">
              <a href="/news/" class="px-6 py-3 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors">ニュース一覧へ戻る</a>
              <a href="/" class="px-6 py-3 bg-gray-200 text-gray-800 rounded-lg hover:bg-gray-300 transition-colors">ホームへ戻る</a>
            </div>
          </div>
        </div>
      </div>

      <div id="news-empty" class="hidden row justify-center">
        <div class="lg:col-8">
          <div class="text-center py-16 bg-white/60 backdrop-blur-sm border border-purple-100/50 rounded-xl">
            <svg class="mx-auto h-12 w-12 text-gray-400 mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z" />
            </svg>
            <p class="text-gray-500 mb-4">まだニュース記事がありません</p>
            <p class="text-sm text-gray-400">新しいニュースが追加されるまでお待ちください</p>
          </div>
        </div>
      </div>

      <noscript>
        <div class="row justify-center">
          <div class="lg:col-8">
            <div class="text-center py-16 bg-red-50 border border-red-200 rounded-xl">
              <p class="text-red-700 font-medium mb-2">JavaScriptが無効になっています</p>
              <p class="text-sm text-red-600">最新のニュースを表示するには、ブラウザの設定でJavaScriptを有効にしてください。</p>
            </div>
          </div>
        </div>
      </noscript>
    </div>
  </section>
</BaseLayout>

<script type="module" define:vars={{ firebaseConfig, baseDescription, baseTitle, siteName }}>
  import { initializeApp } from 'firebase/app';
  import { getDatabase, ref, get, increment, update } from 'firebase/database';
  import { markdownify, plainify } from '@lib/textConverter';

  const firebaseApp = initializeApp(firebaseConfig);
  const database = getDatabase(firebaseApp, firebaseConfig.databaseURL);

  const path = window.location.pathname.replace(/\/+$/, '');
  const basePath = '/news';
  const pathSuffix = decodeURIComponent(path.replace(basePath, '')).replace(/^\/+/, '');
  const isDetail = pathSuffix.length > 0;

  const loadingEl = document.getElementById('news-loading');
  const listViewEl = document.getElementById('news-list-view');
  const detailViewEl = document.getElementById('news-detail-view');
  const notFoundEl = document.getElementById('news-not-found');
  const emptyEl = document.getElementById('news-empty');

  const categoryFiltersEl = document.getElementById('category-filters');
  const newsListEl = document.getElementById('news-list');
  const paginationEl = document.getElementById('pagination');
  const showingCountEl = document.getElementById('showing-count');
  const totalCountEl = document.getElementById('total-count');
  const sortSelectEl = document.getElementById('sort-select');

  const detailContentEl = document.getElementById('news-detail-content');
  const relatedNewsSectionEl = document.getElementById('related-news-section');
  const relatedNewsListEl = document.getElementById('related-news-list');

  const pageTitleEl = document.getElementById('page-title');
  const pageDescEl = document.getElementById('page-description');
  const breadcrumbCurrentEl = document.getElementById('breadcrumb-current');

  let allNews = [];
  let filteredNews = [];
  const itemsPerPage = 9;
  let currentPage = 1;
  let currentCategory = 'all';
  let currentSort = 'date-desc';

  function setMetaTag(selector, attribute, value) {
    const el = document.querySelector(selector);
    if (el) {
      el.setAttribute(attribute, value);
    }
  }

  function ensureMeta(name, content, property = false) {
    const selector = property ? `meta[property="${name}"]` : `meta[name="${name}"]`;
    let el = document.querySelector(selector);
    if (!el) {
      el = document.createElement('meta');
      if (property) {
        el.setAttribute('property', name);
      } else {
        el.setAttribute('name', name);
      }
      document.head.appendChild(el);
    }
    el.setAttribute('content', content);
  }

  function updateHeadForList(totalCount) {
    const title = `${baseTitle} | ${siteName}`;
    document.title = title;
    ensureMeta('description', baseDescription);
    ensureMeta('og:title', title, true);
    ensureMeta('og:description', `${baseDescription}（全${totalCount}件）`, true);
    ensureMeta('og:type', 'website', true);
    ensureMeta('twitter:card', 'summary_large_image');
    const canonical = document.querySelector('link[rel="canonical"]') || (() => {
      const link = document.createElement('link');
      link.setAttribute('rel', 'canonical');
      document.head.appendChild(link);
      return link;
    })();
    canonical.setAttribute('href', `${window.location.origin}/news/`);

    removeStructuredData();
    injectItemListStructuredData(filteredNews.slice(0, Math.min(10, filteredNews.length)));
  }

  function updateHeadForArticle(entry) {
    const title = `${entry.title} | ${siteName}`;
    document.title = title;

    const description = entry.description || plainify(entry.body || '').slice(0, 120);
    ensureMeta('description', description);
    ensureMeta('og:title', entry.title, true);
    ensureMeta('og:description', description, true);
    ensureMeta('og:type', 'article', true);
    if (entry.image) {
      ensureMeta('og:image', entry.image, true);
      ensureMeta('twitter:image', entry.image);
    }
    ensureMeta('twitter:card', 'summary_large_image');

    const canonical = document.querySelector('link[rel="canonical"]') || (() => {
      const link = document.createElement('link');
      link.setAttribute('rel', 'canonical');
      document.head.appendChild(link);
      return link;
    })();
    canonical.setAttribute('href', `${window.location.origin}${entry.url}`);

    removeStructuredData();
    injectArticleStructuredData(entry, description);
  }

  function removeStructuredData() {
    document.querySelectorAll('script[data-dynamic-ld]').forEach((script) => script.remove());
  }

  function injectArticleStructuredData(entry, description) {
    const jsonLd = {
      '@context': 'https://schema.org',
      '@type': 'NewsArticle',
      headline: entry.title,
      description,
      image: entry.image ? [entry.image] : undefined,
      datePublished: entry.publishedAt || entry.date,
      dateModified: entry.updatedAt || entry.date,
      author: Array.isArray(entry.authors)
        ? entry.authors.map((name) => ({ '@type': 'Person', name }))
        : entry.authors
          ? [{ '@type': 'Person', name: entry.authors }]
          : undefined,
      publisher: {
        '@type': 'Organization',
        name: siteName,
        logo: {
          '@type': 'ImageObject',
          url: `${window.location.origin}/logo.png`,
        },
      },
      mainEntityOfPage: {
        '@type': 'WebPage',
        '@id': `${window.location.origin}${entry.url}`,
      },
    };

    const script = document.createElement('script');
    script.type = 'application/ld+json';
    script.dataset.dynamicLd = 'article';
    script.textContent = JSON.stringify(jsonLd, null, 2);
    document.head.appendChild(script);
  }

  function injectItemListStructuredData(entries) {
    if (!entries.length) return;
    const jsonLd = {
      '@context': 'https://schema.org',
      '@type': 'ItemList',
      itemListElement: entries.map((entry, index) => ({
        '@type': 'ListItem',
        position: index + 1,
        url: `${window.location.origin}/news/${entry.slug || entry.id}/`,
        name: entry.title,
      })),
    };

    const script = document.createElement('script');
    script.type = 'application/ld+json';
    script.dataset.dynamicLd = 'itemlist';
    script.textContent = JSON.stringify(jsonLd, null, 2);
    document.head.appendChild(script);
  }

  function toggleView(state) {
    const views = {
      loading: () => {
        loadingEl?.classList.remove('hidden');
        listViewEl?.classList.add('hidden');
        detailViewEl?.classList.add('hidden');
        notFoundEl?.classList.add('hidden');
        emptyEl?.classList.add('hidden');
      },
      list: () => {
        loadingEl?.classList.add('hidden');
        listViewEl?.classList.remove('hidden');
        detailViewEl?.classList.add('hidden');
        notFoundEl?.classList.add('hidden');
        emptyEl?.classList.add('hidden');
      },
      detail: () => {
        loadingEl?.classList.add('hidden');
        listViewEl?.classList.add('hidden');
        detailViewEl?.classList.remove('hidden');
        notFoundEl?.classList.add('hidden');
        emptyEl?.classList.add('hidden');
      },
      empty: () => {
        loadingEl?.classList.add('hidden');
        listViewEl?.classList.add('hidden');
        detailViewEl?.classList.add('hidden');
        notFoundEl?.classList.add('hidden');
        emptyEl?.classList.remove('hidden');
      },
      notFound: () => {
        loadingEl?.classList.add('hidden');
        listViewEl?.classList.add('hidden');
        detailViewEl?.classList.add('hidden');
        notFoundEl?.classList.remove('hidden');
        emptyEl?.classList.add('hidden');
      },
    };

    views[state]?.();
  }

  function sortEntries(entries) {
    switch (currentSort) {
      case 'date-asc':
        return entries.sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime());
      case 'priority':
        return entries.sort((a, b) => (b.priority || 0) - (a.priority || 0));
      case 'views':
        return entries.sort((a, b) => (b.views || 0) - (a.views || 0));
      default:
        return entries.sort((a, b) => {
          if ((b.priority || 0) !== (a.priority || 0)) {
            return (b.priority || 0) - (a.priority || 0);
          }
          return new Date(b.date).getTime() - new Date(a.date).getTime();
        });
    }
  }

  function renderCategoryFilters(categories) {
    if (!categoryFiltersEl) return;

    categoryFiltersEl.innerHTML = `
      <button data-category="all" class="category-filter active px-4 py-2 rounded-full text-sm font-medium transition-all duration-200 bg-purple-600 text-white">
        すべて (${allNews.length})
      </button>
      ${categories.map((cat) => {
        const count = allNews.filter((entry) => entry.categories?.includes(cat)).length;
        return `
          <button data-category="${cat}" class="category-filter px-4 py-2 rounded-full text-sm font-medium transition-all duration-200 bg-white text-gray-700 hover:bg-purple-100">
            ${cat} (${count})
          </button>
        `;
      }).join('')}
    `;
  }

  function renderNewsList() {
    if (!newsListEl || !showingCountEl || !totalCountEl) return;

    const startIndex = (currentPage - 1) * itemsPerPage;
    const endIndex = startIndex + itemsPerPage;
    const visibleNews = filteredNews.slice(startIndex, endIndex);

    newsListEl.innerHTML = visibleNews.map((news) => {
      const href = news.externalLink || `/news/${news.slug || news.id}/`;
      const dateDisplay = news.date
        ? new Date(news.date).toLocaleDateString('ja-JP')
        : '';
      return `
        <div class="news-item flex justify-center">
          <div class="w-full max-w-sm">
            <a href="${href}" class="block glass rounded-lg overflow-hidden hover:shadow-lg transition-all" data-internal-link="${href.startsWith('/news/') ? 'true' : 'false'}">
              <article class="p-6">
                ${news.featured ? '<span class="inline-block px-2 py-1 text-xs font-semibold text-white bg-purple-600 rounded mb-2">注目</span>' : ''}
                <h2 class="text-xl font-bold mb-2">${news.title || ''}</h2>
                <p class="text-gray-600 text-sm mb-4 line-clamp-2">${news.description || ''}</p>
                <div class="flex flex-wrap gap-2 text-xs">
                  ${dateDisplay ? `<span class="text-gray-500">${dateDisplay}</span>` : ''}
                  ${news.views ? `<span class="text-gray-500">👁 ${news.views}</span>` : ''}
                  ${(news.categories || []).map((cat) => `<span class="px-2 py-1 bg-purple-100 text-purple-800 rounded">${cat}</span>`).join('')}
                </div>
              </article>
            </a>
          </div>
        </div>
      `;
    }).join('');

    showingCountEl.textContent = String(Math.min(endIndex, filteredNews.length));
    totalCountEl.textContent = String(filteredNews.length);

    attachInternalLinkListeners();
  }

  function renderPagination() {
    if (!paginationEl) return;

    const totalPages = Math.ceil(filteredNews.length / itemsPerPage);
    if (totalPages <= 1) {
      paginationEl.innerHTML = '';
      return;
    }

    const pages = Array.from({ length: totalPages }, (_, index) => index + 1);
    paginationEl.innerHTML = `
      <li>
        <button class="pagination-prev px-3 py-2 rounded-md bg-white text-gray-700 border border-gray-300 hover:bg-gray-50 ${currentPage === 1 ? 'opacity-50 cursor-not-allowed' : ''}" ${currentPage === 1 ? 'disabled' : ''}>
          <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
          </svg>
        </button>
      </li>
      ${pages.map((page) => `
        <li>
          <button data-page="${page}" class="pagination-btn px-4 py-2 rounded-md ${page === currentPage ? 'bg-purple-600 text-white' : 'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50'}">
            ${page}
          </button>
        </li>
      `).join('')}
      <li>
        <button class="pagination-next px-3 py-2 rounded-md bg-white text-gray-700 border border-gray-300 hover:bg-gray-50 ${currentPage === totalPages ? 'opacity-50 cursor-not-allowed' : ''}" ${currentPage === totalPages ? 'disabled' : ''}>
          <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
          </svg>
        </button>
      </li>
    `;
  }

  function attachInternalLinkListeners() {
    newsListEl?.querySelectorAll('a[data-internal-link="true"]').forEach((anchor) => {
      anchor.addEventListener('click', (event) => {
        event.preventDefault();
        const url = anchor.getAttribute('href');
        if (url) {
          window.location.assign(url);
        }
      });
    });
  }

  function renderRelatedNews(currentId) {
    if (!relatedNewsSectionEl || !relatedNewsListEl) return;
    const related = allNews
      .filter((entry) => entry.id !== currentId && entry.draft !== true)
      .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())
      .slice(0, 3);

    if (!related.length) {
      relatedNewsSectionEl.classList.add('hidden');
      return;
    }

    relatedNewsSectionEl.classList.remove('hidden');
    relatedNewsListEl.innerHTML = related
      .map((news) => {
        const href = news.externalLink || `/news/${news.slug || news.id}/`;
        return `
          <article class="bg-white/60 backdrop-blur-sm border border-purple-100/50 rounded-xl shadow-lg overflow-hidden hover:bg-white/80 transition-all duration-300">
            ${news.image ? `
              <a href="${href}" class="block aspect-video overflow-hidden bg-gray-100">
                <img
                  src="${news.image}"
                  alt="${news.title || ''}"
                  class="w-full h-full object-cover hover:scale-105 transition-transform duration-200"
                  loading="lazy"
                />
              </a>` : ''}
            <div class="p-5">
              <h3 class="text-base font-bold text-gray-900 mb-2 line-clamp-2">
                <a href="${href}" class="hover:text-purple-600 transition-colors">
                  ${news.title || ''}
                </a>
              </h3>
              <p class="text-gray-600 text-sm mb-4 line-clamp-2 leading-relaxed">
                ${news.description || ''}
              </p>
              <div class="flex items-center justify-end">
                <a href="${href}" class="text-purple-600 hover:text-purple-800 text-sm font-medium inline-flex items-center gap-1 group">
                  続きを読む
                  <svg class="w-3 h-3 group-hover:translate-x-0.5 transition-transform" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                  </svg>
                </a>
              </div>
            </div>
          </article>
        `;
      })
      .join('');
  }

  function bindListEvents() {
    categoryFiltersEl?.addEventListener('click', (event) => {
      const target = event.target;
      if (!(target instanceof HTMLElement)) return;
      if (!target.classList.contains('category-filter')) return;

      categoryFiltersEl.querySelectorAll('.category-filter').forEach((button) => {
        button.classList.remove('active', 'bg-purple-600', 'text-white');
        button.classList.add('bg-white', 'text-gray-700');
      });

      target.classList.add('active', 'bg-purple-600', 'text-white');
      target.classList.remove('bg-white', 'text-gray-700');

      currentCategory = target.dataset.category || 'all';
      currentPage = 1;
      filteredNews = sortEntries(
        currentCategory === 'all'
          ? [...allNews]
          : allNews.filter((entry) => entry.categories?.includes(currentCategory))
      );
      renderNewsList();
      renderPagination();
      window.scrollTo({ top: 0, behavior: 'smooth' });

      const url = new URL(window.location.href);
      url.searchParams.set('category', currentCategory);
      history.replaceState({}, '', url.toString());

      updateHeadForList(filteredNews.length);
    });

    sortSelectEl?.addEventListener('change', (event) => {
      const target = event.target;
      if (!(target instanceof HTMLSelectElement)) return;
      currentSort = target.value;
      filteredNews = sortEntries(
        currentCategory === 'all'
          ? [...allNews]
          : allNews.filter((entry) => entry.categories?.includes(currentCategory))
      );
      renderNewsList();
      renderPagination();
    });

    paginationEl?.addEventListener('click', (event) => {
      const target = event.target;
      if (!(target instanceof HTMLElement)) return;
      const button = target.closest('button');
      if (!(button instanceof HTMLButtonElement) || button.disabled) return;

      if (button.classList.contains('pagination-prev')) {
        currentPage = Math.max(1, currentPage - 1);
      } else if (button.classList.contains('pagination-next')) {
        const totalPages = Math.ceil(filteredNews.length / itemsPerPage);
        currentPage = Math.min(totalPages, currentPage + 1);
      } else if (button.dataset.page) {
        currentPage = Number(button.dataset.page);
      }

      renderNewsList();
      renderPagination();
      window.scrollTo({ top: 0, behavior: 'smooth' });
    });
  }

  function hydrateDetail(entry) {
    if (!detailContentEl) return;

    const formattedDate = entry.date
      ? new Date(entry.date).toLocaleDateString('ja-JP', {
          year: 'numeric',
          month: 'long',
          day: 'numeric',
        })
      : '';

    const authors = Array.isArray(entry.authors) ? entry.authors.join(', ') : entry.authors;

    const headerHtml = `
      <header class="mb-10">
        <div class="flex items-center gap-3 mb-6 flex-wrap">
          ${entry.featured ? `
            <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-purple-100 text-purple-800">
              特集記事
            </span>` : ''}
          ${(entry.categories || []).map((category) => `
            <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800">
              ${category}
            </span>
          `).join('')}
        </div>

        <h1 class="text-3xl lg:text-4xl font-bold text-gray-900 mb-6">
          ${entry.title || ''}
        </h1>

        <div class="flex flex-wrap items-center gap-4 text-sm text-gray-600">
          ${formattedDate ? `
            <time datetime="${entry.date}" class="flex items-center gap-1">
              <svg class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
              </svg>
              ${formattedDate}
            </time>` : ''}
          ${entry.source ? `
            <span class="flex items-center gap-1">
              <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                <path d="M2 5a2 2 0 012-2h12a2 2 0 012 2v10a2 2 0 01-2 2H4a2 2 0 01-2-2V5zm3.293 1.293a1 1 0 011.414 0l3 3a1 1 0 010 1.414l-3 3a1 1 0 01-1.414-1.414L7.586 10 5.293 7.707a1 1 0 010-1.414zM11 12a1 1 0 100 2h3a1 1 0 100-2h-3z" />
              </svg>
              ${entry.source}
            </span>` : ''}
          ${typeof entry.views === 'number' ? `
            <span class="flex items-center gap-1">
              <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                <path d="M10 12a2 2 0 100-4 2 2 0 000 4z" />
                <path fill-rule="evenodd" d="M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z" clip-rule="evenodd" />
              </svg>
              ${entry.views} views
            </span>` : ''}
          ${authors ? `
            <span class="flex items-center gap-1">
              <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd" />
              </svg>
              ${authors}
            </span>` : ''}
        </div>
      </header>
    `;

    const descriptionHtml = entry.description
      ? `
        <div class="mb-8 p-6 bg-gray-50 rounded-lg border-l-4 border-purple-500">
          <p class="text-lg text-gray-700 leading-relaxed">
            ${entry.description}
          </p>
        </div>
      `
      : '';

    const imageHtml = entry.image
      ? `
        <figure class="mb-10">
          <img
            src="${entry.image}"
            alt="${entry.title || ''}"
            class="w-full rounded-lg shadow-lg"
            loading="eager"
          />
        </figure>
      `
      : '';

    const bodyHtml = `
      <div class="prose prose-lg max-w-none mb-10">
        <div>${markdownify(entry.body || '', true)}</div>
      </div>
    `;

    const externalLinkHtml = entry.externalLink
      ? `
        <div class="mb-10 p-4 bg-blue-50 rounded-lg border border-blue-200">
          <p class="text-sm text-blue-800 mb-2">外部リンク：</p>
          <a href="${entry.externalLink}" target="_blank" rel="noopener noreferrer"
             class="text-blue-600 hover:text-blue-800 underline inline-flex items-center gap-1">
            ${entry.externalLink}
            <svg class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
            </svg>
          </a>
        </div>
      `
      : '';

    const tagsHtml = (entry.tags || []).length
      ? `
        <div class="flex flex-wrap gap-2 mb-10">
          ${entry.tags.map((tag) => `
            <span class="px-3 py-1 bg-gray-100 text-gray-700 text-sm rounded-full">
              #${tag}
            </span>
          `).join('')}
        </div>
      `
      : '';

    detailContentEl.innerHTML = `
      ${headerHtml}
      ${imageHtml}
      ${descriptionHtml}
      ${bodyHtml}
      ${externalLinkHtml}
      ${tagsHtml}
    `;
  }

  async function incrementViews(id) {
    if (!id) return;
    try {
      const targetRef = ref(database, `cms/news/${id}`);
      await update(targetRef, {
        views: increment(1),
      });
    } catch (error) {
      console.warn('Failed to increment news views', error);
    }
  }

  async function loadNews() {
    toggleView('loading');
    try {
      const snapshot = await get(ref(database, 'cms/news'));
      if (!snapshot.exists()) {
        toggleView('empty');
        return;
      }

      const raw = snapshot.val();
      allNews = Object.entries(raw)
        .map(([id, value]) => (value && typeof value === 'object' ? { id, ...value } : null))
        .filter((entry) => entry && entry.draft !== true);

      if (!allNews.length) {
        toggleView('empty');
        return;
      }

      if (isDetail) {
        await renderDetail(pathSuffix);
      } else {
        renderListView();
      }
    } catch (error) {
      console.error('Failed to load news:', error);
      toggleView('notFound');
    }
  }

  function renderListView() {
    const url = new URL(window.location.href);
    const requestedCategory = url.searchParams.get('category');
    currentCategory = requestedCategory || 'all';
    currentSort = sortSelectEl?.value || 'date-desc';

    const categories = [...new Set(allNews.flatMap((entry) => entry.categories || []))].sort();
    renderCategoryFilters(categories);

    if (currentCategory !== 'all') {
      categoryFiltersEl?.querySelectorAll('.category-filter').forEach((button) => {
        if (button instanceof HTMLElement && button.dataset.category === currentCategory) {
          button.classList.add('active', 'bg-purple-600', 'text-white');
          button.classList.remove('bg-white', 'text-gray-700');
        }
      });
    }

    filteredNews = sortEntries(
      currentCategory === 'all'
        ? [...allNews]
        : allNews.filter((entry) => entry.categories?.includes(currentCategory))
    );

    renderNewsList();
    renderPagination();
    bindListEvents();
    updateHeadForList(filteredNews.length);

    pageTitleEl.textContent = 'ニュース';
    pageDescEl.textContent = baseDescription;
    breadcrumbCurrentEl.textContent = 'ニュース';

    toggleView('list');
  }

  async function renderDetail(slugOrId) {
    let entry = allNews.find((item) => item.slug === slugOrId);
    if (!entry) {
      entry = allNews.find((item) => item.id === slugOrId);
    }

    if (!entry) {
      toggleView('notFound');
      updateHeadForList(0);
      return;
    }

    hydrateDetail(entry);
    renderRelatedNews(entry.id);
    await incrementViews(entry.id);
    updateHeadForArticle({
      ...entry,
      url: `/news/${entry.slug || entry.id}/`,
    });

    pageTitleEl.textContent = entry.title || 'ニュース';
    pageDescEl.textContent = entry.description || baseDescription;
    breadcrumbCurrentEl.textContent = entry.title || '詳細';

    toggleView('detail');
  }

  document.addEventListener('DOMContentLoaded', loadNews);
</script>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
