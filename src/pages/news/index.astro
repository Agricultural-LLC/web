---
import BaseLayout from "@components/base/BaseLayout.astro";

const siteName = "農業合同会社 Webサイト";
const baseTitle = "ニュース";
const baseDescription = "農業DXに関する最新情報をお届けします";

const firebaseConfig = {
  apiKey:
    import.meta.env.PUBLIC_FIREBASE_API_KEY ||
    "AIzaSyCkctZ3zzyHw0JEEf8w-wl_xVE-1lQLo7E",
  authDomain:
    import.meta.env.PUBLIC_FIREBASE_AUTH_DOMAIN ||
    "agricultural-llc.firebaseapp.com",
  databaseURL:
    import.meta.env.PUBLIC_FIREBASE_DATABASE_URL ||
    "https://agricultural-llc-default-rtdb.asia-southeast1.firebasedatabase.app",
  projectId:
    import.meta.env.PUBLIC_FIREBASE_PROJECT_ID || "agricultural-llc",
  storageBucket:
    import.meta.env.PUBLIC_FIREBASE_STORAGE_BUCKET ||
    "agricultural-llc.firebasestorage.app",
  messagingSenderId:
    import.meta.env.PUBLIC_FIREBASE_MESSAGING_SENDER_ID || "293681935404",
  appId:
    import.meta.env.PUBLIC_FIREBASE_APP_ID ||
    "1:293681935404:web:188089a29ff3da05490d89",
};
---

<BaseLayout title={`${baseTitle} | ${siteName}`} description={baseDescription}>
  <section class="py-16 min-h-screen" data-news-root>
    <div class="container">
      <nav class="mb-8" aria-label="パンくずリスト">
        <ol class="flex items-center space-x-2 text-sm text-gray-600">
          <li><a href="/" class="hover:text-purple-600 transition-colors">ホーム</a></li>
          <li><span class="mx-2">/</span></li>
          <li class="text-gray-900 font-medium" id="breadcrumb-current">ニュース</li>
        </ol>
      </nav>

      <div class="row justify-center mb-10">
        <div class="md:col-10 lg:col-8 text-center">
          <h1 id="page-title" class="text-3xl lg:text-4xl font-bold text-gray-900 mb-4">
            ニュース
          </h1>
          <p id="page-description" class="text-lg text-gray-600">
            農業DXに関する最新情報をお届けします
          </p>
        </div>
      </div>

      <div id="news-loading" class="text-center py-12">
        <div class="inline-block animate-spin rounded-full h-12 w-12 border-b-2 border-purple-600"></div>
        <p class="mt-4 text-gray-600">ニュースを読み込み中...</p>
      </div>

      <div id="news-list-view" class="hidden">
        <div class="row justify-center mb-8">
          <div class="lg:col-10">
            <div class="flex flex-wrap justify-center gap-2" id="category-filters"></div>
          </div>
        </div>

        <div class="row justify-center mb-4">
          <div class="lg:col-10 flex flex-col gap-3 md:flex-row md:items-center md:justify-between">
            <p class="text-gray-600 text-sm md:text-base">
              <span id="showing-count">0</span>件 / 全<span id="total-count">0</span>件を表示
            </p>
            <label class="inline-flex items-center gap-2 text-sm text-gray-600">
              並び替え:
              <select
                id="sort-select"
                class="px-3 py-1 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-purple-500"
              >
                <option value="date-desc">新しい順</option>
                <option value="date-asc">古い順</option>
                <option value="priority">優先度順</option>
                <option value="views">閲覧数順</option>
              </select>
            </label>
          </div>
        </div>

        <div class="row justify-center" id="news-grid">
          <div class="lg:col-10">
            <div id="news-list" class="grid md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8"></div>
          </div>
        </div>

        <div class="row justify-center">
          <div class="lg:col-10">
            <nav aria-label="ページネーション" class="flex justify-center">
              <ul class="flex gap-2" id="pagination"></ul>
            </nav>
          </div>
        </div>
      </div>

      <div id="news-detail-view" class="hidden">
        <article class="row justify-center">
          <div class="lg:col-10 xl:col-8">
            <div id="news-detail-content" class="prose prose-lg max-w-none text-gray-800"></div>
          </div>
        </article>

        <div id="related-news-section" class="row justify-center mt-16 hidden">
          <div class="lg:col-10">
            <h2 class="text-2xl font-bold text-gray-900 mb-8 text-center">関連ニュース</h2>
            <div id="related-news-list" class="grid md:grid-cols-2 lg:grid-cols-3 gap-6"></div>
          </div>
        </div>

        <div class="mt-12 flex justify-center">
          <a href="/news/" class="inline-flex items-center gap-2 text-purple-600 hover:text-purple-800 transition-colors">
            <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16l-4-4m0 0l4-4m-4 4h18" />
            </svg>
            ニュース一覧に戻る
          </a>
        </div>
      </div>

      <div id="news-not-found" class="hidden row justify-center">
        <div class="lg:col-8">
          <div class="text-center py-16 bg-white/60 backdrop-blur-sm border border-purple-100/50 rounded-xl">
            <svg class="mx-auto h-12 w-12 text-gray-400 mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
            <p class="text-gray-500 mb-4">お探しの記事が見つかりませんでした</p>
            <p class="text-sm text-gray-400">URLをご確認いただくか、ニュース一覧に戻って再度お探しください。</p>
            <div class="mt-6 flex justify-center gap-4">
              <a href="/news/" class="px-6 py-3 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors">ニュース一覧へ戻る</a>
              <a href="/" class="px-6 py-3 bg-gray-200 text-gray-800 rounded-lg hover:bg-gray-300 transition-colors">ホームへ戻る</a>
            </div>
          </div>
        </div>
      </div>

      <div id="news-empty" class="hidden row justify-center">
        <div class="lg:col-8">
          <div class="text-center py-16 bg-white/60 backdrop-blur-sm border border-purple-100/50 rounded-xl">
            <svg class="mx-auto h-12 w-12 text-gray-400 mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z" />
            </svg>
            <p class="text-gray-500 mb-4">まだニュース記事がありません</p>
            <p class="text-sm text-gray-400">新しいニュースが追加されるまでお待ちください</p>
          </div>
        </div>
      </div>

      <noscript>
        <div class="row justify-center">
          <div class="lg:col-8">
            <div class="text-center py-16 bg-red-50 border border-red-200 rounded-xl">
              <p class="text-red-700 font-medium mb-2">JavaScriptが無効になっています</p>
              <p class="text-sm text-red-600">最新のニュースを表示するには、ブラウザの設定でJavaScriptを有効にしてください。</p>
            </div>
          </div>
        </div>
      </noscript>
    </div>
  </section>
</BaseLayout>

<script type="module" define:vars={{ firebaseConfig, baseDescription, baseTitle, siteName }}>
  import { initializeApp, getApps, getApp } from "https://www.gstatic.com/firebasejs/10.7.1/firebase-app.js";
  import {
    getDatabase,
    ref,
    get,
    increment,
    update,
  } from "https://www.gstatic.com/firebasejs/10.7.1/firebase-database.js";
  import { marked } from "https://cdn.jsdelivr.net/npm/marked@11.1.1/lib/marked.esm.js";

  const RUNNER_KEY = "__newsPageInstance";
  const ITEMS_PER_PAGE = 9;

  marked.setOptions({
    gfm: true,
    breaks: true,
    mangle: false,
    headerIds: false,
  });

  function getFirebaseApp() {
    if (!getApps().length) {
      initializeApp(firebaseConfig);
    }
    return getApp();
  }

  function createSlug(text) {
    if (!text) return "";
    return String(text)
      .trim()
      .toLowerCase()
      .replace(/[\s_]+/g, '-')
      .replace(/[^a-z0-9\-\u3040-\u30ff\u3400-\u9fff\uff66-\uff9f\u30fc]+/g, '')
      .replace(/-+/g, '-')
      .replace(/^-|-$/g, '');
  }

  function markdownToHtml(markdown) {
    const html = marked.parse(markdown || "");
    const template = document.createElement('template');
    template.innerHTML = html;

    const slugCounts = new Map();
    template.content.querySelectorAll('h1, h2, h3, h4, h5, h6').forEach((heading) => {
      const baseSlug = createSlug(heading.textContent || '');
      const count = slugCounts.get(baseSlug) || 0;
      const finalSlug = baseSlug ? (count ? `${baseSlug}-${count}` : baseSlug) : `section-${count + 1}`;
      slugCounts.set(baseSlug, count + 1);
      heading.id = finalSlug;
    });

    return template.innerHTML;
  }

  function markdownToPlain(markdown) {
    const html = marked.parse(markdown || "");
    const template = document.createElement('template');
    template.innerHTML = html;
    const text = template.content.textContent || "";
    return text.replace(/\s+/g, ' ').trim();
  }

  function normalizeNewsEntry(id, raw) {
    if (!raw || typeof raw !== 'object') return null;

    const toStringSafe = (value) =>
      typeof value === 'string' ? value : value != null ? String(value) : '';
    const toArraySafe = (value) => {
      if (Array.isArray(value)) {
        return value.filter((item) => item != null).map((item) => String(item));
      }
      return value != null ? [String(value)] : [];
    };
    const toNumberSafe = (value, fallback = 0) => {
      const num = Number(value);
      return Number.isFinite(num) ? num : fallback;
    };

    const slug = toStringSafe(raw.slug) || id;

    return {
      id,
      slug,
      title: toStringSafe(raw.title),
      description: toStringSafe(raw.description),
      body: toStringSafe(raw.body),
      date: toStringSafe(raw.date),
      image: toStringSafe(raw.image),
      imageAlt: toStringSafe(raw.imageAlt) || toStringSafe(raw.title),
      authors: toArraySafe(raw.authors),
      categories: toArraySafe(raw.categories),
      tags: toArraySafe(raw.tags),
      draft: Boolean(raw.draft),
      priority: toNumberSafe(raw.priority),
      featured: Boolean(raw.featured),
      externalLink: toStringSafe(raw.externalLink),
      source: toStringSafe(raw.source),
      views: toNumberSafe(raw.views),
      publishedAt: toStringSafe(raw.publishedAt),
      updatedAt: toStringSafe(raw.updatedAt),
      createdAt: toStringSafe(raw.createdAt),
    };
  }

  class NewsPage {
    constructor(root) {
      this.root = root;
      this.database = getDatabase(getFirebaseApp());
      this.state = {
        allNews: [],
        filteredNews: [],
        currentPage: 1,
        currentCategory: 'all',
        currentSort: 'date-desc',
      };
      this.controller = new AbortController();
      this.elements = this.queryElements();
    }

    destroy() {
      this.controller.abort();
    }

    queryElements() {
      return {
        loading: this.root.querySelector('#news-loading'),
        listView: this.root.querySelector('#news-list-view'),
        detailView: this.root.querySelector('#news-detail-view'),
        emptyView: this.root.querySelector('#news-empty'),
        notFoundView: this.root.querySelector('#news-not-found'),
        categoryFilters: this.root.querySelector('#category-filters'),
        newsList: this.root.querySelector('#news-list'),
        pagination: this.root.querySelector('#pagination'),
        showingCount: this.root.querySelector('#showing-count'),
        totalCount: this.root.querySelector('#total-count'),
        sortSelect: this.root.querySelector('#sort-select'),
        detailContent: this.root.querySelector('#news-detail-content'),
        relatedSection: this.root.querySelector('#related-news-section'),
        relatedList: this.root.querySelector('#related-news-list'),
        pageTitle: this.root.querySelector('#page-title'),
        pageDescription: this.root.querySelector('#page-description'),
        breadcrumbCurrent: this.root.querySelector('#breadcrumb-current'),
      };
    }

    setView(view) {
      const { loading, listView, detailView, emptyView, notFoundView } = this.elements;
      if (loading) loading.classList.toggle('hidden', view !== 'loading');
      if (listView) listView.classList.toggle('hidden', view !== 'list');
      if (detailView) detailView.classList.toggle('hidden', view !== 'detail');
      if (emptyView) emptyView.classList.toggle('hidden', view !== 'empty');
      if (notFoundView) notFoundView.classList.toggle('hidden', view !== 'notFound');
    }

    getRouteInfo() {
      const basePath = '/news';
      const path = window.location.pathname.replace(/\/+$/, '');
      let slug = '';
      if (path.startsWith(basePath)) {
        slug = decodeURIComponent(path.slice(basePath.length)).replace(/^\/+/, '');
      }
      return { isDetail: slug.length > 0, slug };
    }

    bindEvents() {
      this.controller.abort();
      this.controller = new AbortController();
      const signal = this.controller.signal;
      const { categoryFilters, sortSelect, pagination } = this.elements;

      categoryFilters?.addEventListener('click', (event) => {
        const target = event.target;
        if (!(target instanceof HTMLElement)) return;
        if (!target.classList.contains('category-filter')) return;
        this.state.currentCategory = target.dataset.category || 'all';
        this.state.currentPage = 1;
        this.renderListView();
        const url = new URL(window.location.href);
        if (this.state.currentCategory === 'all') {
          url.searchParams.delete('category');
        } else {
          url.searchParams.set('category', this.state.currentCategory);
        }
        history.replaceState({}, '', url.toString());
      }, { signal });

      sortSelect?.addEventListener('change', (event) => {
        const target = event.target;
        if (!(target instanceof HTMLSelectElement)) return;
        this.state.currentSort = target.value;
        this.state.currentPage = 1;
        this.renderListView();
      }, { signal });

      pagination?.addEventListener('click', (event) => {
        const target = event.target;
        if (!(target instanceof HTMLElement)) return;
        const button = target.closest('button');
        if (!(button instanceof HTMLButtonElement) || button.disabled) return;

        if (button.classList.contains('pagination-prev')) {
          this.state.currentPage = Math.max(1, this.state.currentPage - 1);
        } else if (button.classList.contains('pagination-next')) {
          const totalPages = Math.ceil(this.state.filteredNews.length / ITEMS_PER_PAGE);
          this.state.currentPage = Math.min(totalPages, this.state.currentPage + 1);
        } else if (button.dataset.page) {
          this.state.currentPage = Number(button.dataset.page);
        }

        this.renderListView();
        window.scrollTo({ top: 0, behavior: 'smooth' });
      }, { signal });
    }

    renderCategoryFilters() {
      const { categoryFilters } = this.elements;
      if (!categoryFilters) return;

      const categories = [...new Set(this.state.allNews.flatMap((entry) => entry.categories || []))]
        .filter(Boolean)
        .sort((a, b) => a.localeCompare(b, 'ja'));

      const buildButton = (value, label, count, active) => {
        const base = 'category-filter px-4 py-2 rounded-full text-sm font-medium transition-all duration-200';
        const activeClass = 'bg-purple-600 text-white';
        const inactiveClass = 'bg-white text-gray-700 hover:bg-purple-100';
        return `<button data-category="${value}" class="${base} ${active ? activeClass : inactiveClass}">
          ${label} (${count})
        </button>`;
      };

      const allBtn = buildButton('all', 'すべて', this.state.allNews.length, this.state.currentCategory === 'all');
      const categoryButtons = categories.map((category) => {
        const count = this.state.allNews.filter((entry) => entry.categories?.includes(category)).length;
        return buildButton(category, category, count, this.state.currentCategory === category);
      }).join('');

      categoryFilters.innerHTML = `${allBtn}${categoryButtons}`;
    }

    applyFilters() {
      const base = this.state.currentCategory === 'all'
        ? [...this.state.allNews]
        : this.state.allNews.filter((entry) => entry.categories?.includes(this.state.currentCategory));

      return [...base].sort((a, b) => {
        switch (this.state.currentSort) {
          case 'date-asc':
            return new Date(a.date).getTime() - new Date(b.date).getTime();
          case 'priority':
            return (b.priority || 0) - (a.priority || 0);
          case 'views':
            return (b.views || 0) - (a.views || 0);
          default:
            if ((b.priority || 0) !== (a.priority || 0)) {
              return (b.priority || 0) - (a.priority || 0);
            }
            return new Date(b.date).getTime() - new Date(a.date).getTime();
        }
      });
    }

    renderNewsList() {
      const { newsList, showingCount, totalCount } = this.elements;
      if (!newsList) return;

      const totalPages = Math.max(1, Math.ceil(this.state.filteredNews.length / ITEMS_PER_PAGE));
      if (this.state.currentPage > totalPages) {
        this.state.currentPage = totalPages;
      }

      const startIndex = (this.state.currentPage - 1) * ITEMS_PER_PAGE;
      const endIndex = startIndex + ITEMS_PER_PAGE;
      const visibleNews = this.state.filteredNews.slice(startIndex, endIndex);

      newsList.innerHTML = visibleNews.map((news) => {
        const slug = news.slug || news.id;
        const href = slug ? `/news/${slug}/` : '#news';
        const dateDisplay = news.date ? new Date(news.date).toLocaleDateString('ja-JP') : '';
        const datetimeAttr = news.date ? new Date(news.date).toISOString() : '';
        return `
          <div class="news-item flex justify-center">
            <div class="w-full max-w-sm">
              <a href="${href}" class="block glass rounded-lg overflow-hidden hover:shadow-lg transition-all">
                <article class="p-6">
                  ${news.featured ? '<span class="inline-block px-2 py-1 text-xs font-semibold text-white bg-purple-600 rounded mb-2">注目</span>' : ''}
                  <h2 class="text-xl font-bold mb-2">${news.title || ''}</h2>
                  <p class="text-gray-600 text-sm mb-4 line-clamp-2">${news.description || ''}</p>
                  <div class="flex flex-wrap gap-2 text-xs">
                    ${dateDisplay ? `<span class="text-gray-500"><time datetime="${datetimeAttr}">${dateDisplay}</time></span>` : ''}
                    ${news.views ? `<span class="text-gray-500">👁 ${news.views}</span>` : ''}
                    ${(news.categories || []).map((cat) => `<span class="px-2 py-1 bg-purple-100 text-purple-800 rounded">${cat}</span>`).join('')}
                  </div>
                </article>
              </a>
            </div>
          </div>
        `;
      }).join('');

      if (showingCount) showingCount.textContent = String(Math.min(endIndex, this.state.filteredNews.length));
      if (totalCount) totalCount.textContent = String(this.state.filteredNews.length);
    }

    renderPagination() {
      const { pagination } = this.elements;
      if (!pagination) return;

      const totalPages = Math.ceil(this.state.filteredNews.length / ITEMS_PER_PAGE);
      if (totalPages <= 1) {
        pagination.innerHTML = '';
        return;
      }

      const pages = Array.from({ length: totalPages }, (_, index) => index + 1);
      pagination.innerHTML = `
        <li>
          <button class="pagination-prev px-3 py-2 rounded-md bg-white text-gray-700 border border-gray-300 hover:bg-gray-50 ${this.state.currentPage === 1 ? 'opacity-50 cursor-not-allowed' : ''}" ${this.state.currentPage === 1 ? 'disabled' : ''}>
            <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
            </svg>
          </button>
        </li>
        ${pages.map((page) => `
          <li>
            <button data-page="${page}" class="pagination-btn px-4 py-2 rounded-md ${page === this.state.currentPage ? 'bg-purple-600 text-white' : 'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50'}">
              ${page}
            </button>
          </li>
        `).join('')}
        <li>
          <button class="pagination-next px-3 py-2 rounded-md bg-white text-gray-700 border border-gray-300 hover:bg-gray-50 ${this.state.currentPage === totalPages ? 'opacity-50 cursor-not-allowed' : ''}" ${this.state.currentPage === totalPages ? 'disabled' : ''}>
            <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
            </svg>
          </button>
        </li>
      `;
    }

    renderListView() {
      this.renderCategoryFilters();
      this.state.filteredNews = this.applyFilters();

      if (!this.state.filteredNews.length) {
        const { showingCount, totalCount } = this.elements;
        if (showingCount) showingCount.textContent = '0';
        if (totalCount) totalCount.textContent = '0';
        this.setView('empty');
        return;
      }

      const { sortSelect, pageTitle, pageDescription, breadcrumbCurrent } = this.elements;
      if (sortSelect) sortSelect.value = this.state.currentSort;

      this.renderNewsList();
      this.renderPagination();
      updateHeadForList(this.state.filteredNews.length);

      if (pageTitle) pageTitle.textContent = 'ニュース';
      if (pageDescription) pageDescription.textContent = baseDescription;
      if (breadcrumbCurrent) breadcrumbCurrent.textContent = 'ニュース';

      this.setView('list');
    }

    renderRelatedNews(currentId) {
      const { relatedSection, relatedList } = this.elements;
      if (!relatedSection || !relatedList) return;

      const related = this.state.allNews
        .filter((entry) => entry.id !== currentId)
        .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())
        .slice(0, 3);

      if (!related.length) {
        relatedSection.classList.add('hidden');
        relatedList.innerHTML = '';
        return;
      }

      relatedSection.classList.remove('hidden');
      relatedList.innerHTML = related.map((news) => {
        const slug = news.slug || news.id;
        const href = slug ? `/news/${slug}/` : '#news';
        const dateDisplay = news.date ? new Date(news.date).toLocaleDateString('ja-JP') : '';
        const datetimeAttr = news.date ? new Date(news.date).toISOString() : '';
        return `
          <article class="bg-white/60 backdrop-blur-sm border border-purple-100/50 rounded-xl shadow-lg overflow-hidden hover:bg-white/80 transition-all duration-300">
            ${news.image ? `
              <a href="${href}" class="block aspect-video overflow-hidden bg-gray-100">
                <img
                  src="${news.image}"
                  alt="${news.title || ''}"
                  class="w-full h-full object-cover hover:scale-105 transition-transform duration-200"
                  loading="lazy"
                />
              </a>` : ''}
            <div class="p-5">
              <h3 class="text-base font-bold text-gray-900 mb-2 line-clamp-2">
                <a href="${href}" class="hover:text-purple-600 transition-colors">
                  ${news.title || ''}
                </a>
              </h3>
              <p class="text-gray-600 text-sm mb-4 line-clamp-2 leading-relaxed">
                ${news.description || ''}
              </p>
              <div class="flex items-center justify-between text-xs text-gray-500 mb-4">
                ${dateDisplay ? `<time datetime="${datetimeAttr}">${dateDisplay}</time>` : '<span></span>'}
                ${(news.categories || []).slice(0, 1).map((cat) => `<span class="px-2 py-0.5 bg-purple-100 text-purple-800 rounded-full">${cat}</span>`).join('')}
              </div>
              <div class="flex items-center justify-end">
                <a href="${href}" class="text-purple-600 hover:text-purple-800 text-sm font-medium inline-flex items-center gap-1 group">
                  続きを読む
                  <svg class="w-3 h-3 group-hover:translate-x-0.5 transition-transform" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                  </svg>
                </a>
              </div>
            </div>
          </article>
        `;
      }).join('');
    }

    renderDetail(entry) {
      const { detailContent, pageTitle, pageDescription, breadcrumbCurrent } = this.elements;
      if (!detailContent) return;

      const formattedDate = entry.date
        ? new Date(entry.date).toLocaleDateString('ja-JP', { year: 'numeric', month: 'long', day: 'numeric' })
        : '';
      const dateIso = entry.date ? new Date(entry.date).toISOString() : '';
      const authors = entry.authors.join(', ');

      detailContent.innerHTML = `
        <header class="mb-10">
          <div class="flex items-center gap-3 mb-6 flex-wrap">
            ${entry.featured ? '<span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-purple-100 text-purple-800">特集記事</span>' : ''}
            ${(entry.categories || []).map((category) => `
              <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800">${category}</span>
            `).join('')}
          </div>
          <h1 class="text-3xl lg:text-4xl font-bold text-gray-900 mb-6">
            ${entry.title || ''}
          </h1>
          <div class="flex flex-wrap items-center gap-4 text-sm text-gray-600">
            ${formattedDate ? `
              <time datetime="${dateIso}" class="flex items-center gap-1">
                <svg class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                </svg>
                ${formattedDate}
              </time>` : ''}
            ${entry.source ? `
              <span class="flex items-center gap-1">
                <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                  <path d="M2 5a2 2 0 012-2h12a2 2 0 012 2v10a2 2 0 01-2 2H4a2 2 0 01-2-2V5zm3.293 1.293a1 1 0 011.414 0l3 3a1 1 0 010 1.414l-3 3a1 1 0 01-1.414-1.414L7.586 10 5.293 7.707a1 1 0 010-1.414zM11 12a1 1 0 100 2h3a1 1 0 100-2h-3z" />
                </svg>
                ${entry.source}
              </span>` : ''}
            ${Number.isFinite(entry.views) ? `
              <span class="flex items-center gap-1">
                <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                  <path d="M10 12a2 2 0 100-4 2 2 0 000 4z" />
                  <path fill-rule="evenodd" d="M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z" clip-rule="evenodd" />
                </svg>
                ${entry.views}
              </span>` : ''}
            ${authors ? `
              <span class="flex items-center gap-1">
                <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd" />
                </svg>
                ${authors}
              </span>` : ''}
          </div>
        </header>
        ${entry.image ? `
          <figure class="mb-10">
            <img
              src="${entry.image}"
              alt="${entry.imageAlt || entry.title || ''}"
              class="w-full rounded-lg shadow-lg"
              loading="eager"
            />
          </figure>
        ` : ''}
        ${entry.description ? `
          <div class="mb-8 p-6 bg-gray-50 rounded-lg border-l-4 border-purple-500">
            <p class="text-lg text-gray-700 leading-relaxed">
              ${entry.description}
            </p>
          </div>
        ` : ''}
        <div class="prose prose-lg max-w-none mb-10">
          <div>${markdownToHtml(entry.body || '')}</div>
        </div>
        ${entry.externalLink ? `
          <div class="mb-10 p-4 bg-blue-50 rounded-lg border border-blue-200">
            <p class="text-sm text-blue-800 mb-2">外部リンク：</p>
            <a href="${entry.externalLink}" target="_blank" rel="noopener noreferrer"
               class="text-blue-600 hover:text-blue-800 underline inline-flex items-center gap-1">
              ${entry.externalLink}
              <svg class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
              </svg>
            </a>
          </div>
        ` : ''}
        ${(entry.tags || []).length ? `
          <div class="flex flex-wrap gap-2 mb-10">
            ${(entry.tags || []).map((tag) => `<span class="px-3 py-1 bg-gray-100 text-gray-700 text-sm rounded-full">#${tag}</span>`).join('')}
          </div>
        ` : ''}
        <div class="border-t border-gray-200 pt-8">
          <a href="/news/" class="inline-flex items-center gap-2 text-purple-600 hover:text-purple-800 transition-colors">
            <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16l-4-4m0 0l4-4m-4 4h18" />
            </svg>
            ニュース一覧に戻る
          </a>
        </div>
      `;

      if (pageTitle) pageTitle.textContent = entry.title || 'ニュース';
      if (pageDescription) pageDescription.textContent = entry.description || baseDescription;
      if (breadcrumbCurrent) breadcrumbCurrent.textContent = entry.title || '詳細';

      const description = entry.description || markdownToPlain(entry.body || '').slice(0, 120);
      updateHeadForArticle(entry, description);
      this.renderRelatedNews(entry.id);
      this.setView('detail');
    }

    async incrementViews(id) {
      if (!id) return;
      try {
        await update(ref(this.database, `cms/news/${id}`), { views: increment(1) });
      } catch (error) {
        console.warn('Failed to increment news views', error);
      }
    }

    async loadRoute() {
      this.setView('loading');
      try {
        const snapshot = await get(ref(this.database, 'cms/news'));
        if (!snapshot.exists()) {
          resetState();
          this.setView('empty');
          return;
        }

        const raw = snapshot.val();
        this.state.allNews = Object.entries(raw)
          .map(([id, value]) => normalizeNewsEntry(id, value))
          .filter((entry) => entry && !entry.draft);

        if (!this.state.allNews.length) {
          resetState();
          this.setView('empty');
          return;
        }

        const route = this.getRouteInfo();
        if (route.isDetail) {
          const entry = this.state.allNews.find((item) => item.slug === route.slug || item.id === route.slug);
          if (!entry) {
            this.setView('notFound');
            return;
          }
          this.renderDetail(entry);
          await this.incrementViews(entry.id);
          return;
        }

        const url = new URL(window.location.href);
        const requestedCategory = url.searchParams.get('category');
        const requestedSort = url.searchParams.get('sort');

        this.state.currentCategory = requestedCategory || 'all';
        if (requestedSort && ['date-desc', 'date-asc', 'priority', 'views'].includes(requestedSort)) {
          this.state.currentSort = requestedSort;
        } else {
          this.state.currentSort = 'date-desc';
        }
        this.state.currentPage = 1;

        this.renderListView();
      } catch (error) {
        console.error('Failed to load news:', error);
        this.setView('notFound');
      }
    }

    init() {
      if (!this.elements.newsList || !this.elements.detailContent) {
        return;
      }
      this.bindEvents();
      this.loadRoute();
    }
  }

  function startNewsPage() {
    const root = document.querySelector('[data-news-root]');
    if (!root) {
      if (window[RUNNER_KEY]) {
        window[RUNNER_KEY].destroy();
        window[RUNNER_KEY] = null;
      }
      return;
    }

    if (window[RUNNER_KEY]) {
      window[RUNNER_KEY].destroy();
    }

    const page = new NewsPage(root);
    window[RUNNER_KEY] = page;
    page.init();
  }

  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', startNewsPage, { once: true });
  } else {
    startNewsPage();
  }

  document.addEventListener('astro:page-load', startNewsPage);
</script>


<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
