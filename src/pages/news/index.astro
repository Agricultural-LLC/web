---
import BaseLayout from "@components/base/BaseLayout.astro";

const siteName = "農業合同会社 Webサイト";
const baseTitle = "ニュース";
const baseDescription = "農業DXに関する最新情報をお届けします";

const firebaseConfig = {
  apiKey:
    import.meta.env.PUBLIC_FIREBASE_API_KEY ||
    "AIzaSyCkctZ3zzyHw0JEEf8w-wl_xVE-1lQLo7E",
  authDomain:
    import.meta.env.PUBLIC_FIREBASE_AUTH_DOMAIN ||
    "agricultural-llc.firebaseapp.com",
  databaseURL:
    import.meta.env.PUBLIC_FIREBASE_DATABASE_URL ||
    "https://agricultural-llc-default-rtdb.asia-southeast1.firebasedatabase.app",
  projectId:
    import.meta.env.PUBLIC_FIREBASE_PROJECT_ID || "agricultural-llc",
  storageBucket:
    import.meta.env.PUBLIC_FIREBASE_STORAGE_BUCKET ||
    "agricultural-llc.firebasestorage.app",
  messagingSenderId:
    import.meta.env.PUBLIC_FIREBASE_MESSAGING_SENDER_ID || "293681935404",
  appId:
    import.meta.env.PUBLIC_FIREBASE_APP_ID ||
    "1:293681935404:web:188089a29ff3da05490d89",
};
---

<BaseLayout title={`${baseTitle} | ${siteName}`} description={baseDescription}>
  <section class="py-16 min-h-screen" data-news-root>
    <div class="container">
      <nav class="mb-8" aria-label="パンくずリスト">
        <ol class="flex items-center space-x-2 text-sm text-gray-600">
          <li><a href="/" class="hover:text-purple-600 transition-colors">ホーム</a></li>
          <li><span class="mx-2">/</span></li>
          <li class="text-gray-900 font-medium" id="breadcrumb-current">ニュース</li>
        </ol>
      </nav>

      <div class="row justify-center mb-10">
        <div class="md:col-10 lg:col-8 text-center">
          <h1 id="page-title" class="text-3xl lg:text-4xl font-bold text-gray-900 mb-4">
            ニュース
          </h1>
          <p id="page-description" class="text-lg text-gray-600">
            農業DXに関する最新情報をお届けします
          </p>
        </div>
      </div>

      <div id="news-loading" class="text-center py-12">
        <div class="inline-block animate-spin rounded-full h-12 w-12 border-b-2 border-purple-600"></div>
        <p class="mt-4 text-gray-600">ニュースを読み込み中...</p>
      </div>

      <div id="news-list-view" class="hidden">
        <div class="row justify-center mb-8">
          <div class="lg:col-10">
            <div class="flex flex-wrap justify-center gap-2" id="category-filters"></div>
          </div>
        </div>

        <div class="row justify-center mb-4">
          <div class="lg:col-10 flex flex-col gap-3 md:flex-row md:items-center md:justify-between">
            <p class="text-gray-600 text-sm md:text-base">
              <span id="showing-count">0</span>件 / 全<span id="total-count">0</span>件を表示
            </p>
            <label class="inline-flex items-center gap-2 text-sm text-gray-600">
              並び替え:
              <select
                id="sort-select"
                class="px-3 py-1 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-purple-500"
              >
                <option value="date-desc">新しい順</option>
                <option value="date-asc">古い順</option>
                <option value="priority">優先度順</option>
                <option value="views">閲覧数順</option>
              </select>
            </label>
          </div>
        </div>

        <div class="row justify-center" id="news-grid">
          <div class="lg:col-10">
            <div id="news-list" class="grid md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8"></div>
          </div>
        </div>

        <div class="row justify-center">
          <div class="lg:col-10">
            <nav aria-label="ページネーション" class="flex justify-center">
              <ul class="flex gap-2" id="pagination"></ul>
            </nav>
          </div>
        </div>
      </div>

      <div id="news-detail-view" class="hidden">
        <article class="row justify-center">
          <div class="lg:col-10 xl:col-8">
            <div id="news-detail-content" class="prose prose-lg max-w-none text-gray-800"></div>
          </div>
        </article>

        <div id="related-news-section" class="row justify-center mt-16 hidden">
          <div class="lg:col-10">
            <h2 class="text-2xl font-bold text-gray-900 mb-8 text-center">関連ニュース</h2>
            <div id="related-news-list" class="grid md:grid-cols-2 lg:grid-cols-3 gap-6"></div>
          </div>
        </div>

        <div class="mt-12 flex justify-center">
          <a href="/news/" class="inline-flex items-center gap-2 text-purple-600 hover:text-purple-800 transition-colors">
            <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16l-4-4m0 0l4-4m-4 4h18" />
            </svg>
            ニュース一覧に戻る
          </a>
        </div>
      </div>

      <div id="news-not-found" class="hidden row justify-center">
        <div class="lg:col-8">
          <div class="text-center py-16 bg-white/60 backdrop-blur-sm border border-purple-100/50 rounded-xl">
            <svg class="mx-auto h-12 w-12 text-gray-400 mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
            <p class="text-gray-500 mb-4">お探しの記事が見つかりませんでした</p>
            <p class="text-sm text-gray-400">URLをご確認いただくか、ニュース一覧に戻って再度お探しください。</p>
            <div class="mt-6 flex justify-center gap-4">
              <a href="/news/" class="px-6 py-3 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors">ニュース一覧へ戻る</a>
              <a href="/" class="px-6 py-3 bg-gray-200 text-gray-800 rounded-lg hover:bg-gray-300 transition-colors">ホームへ戻る</a>
            </div>
          </div>
        </div>
      </div>

      <div id="news-empty" class="hidden row justify-center">
        <div class="lg:col-8">
          <div class="text-center py-16 bg-white/60 backdrop-blur-sm border border-purple-100/50 rounded-xl">
            <svg class="mx-auto h-12 w-12 text-gray-400 mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z" />
            </svg>
            <p class="text-gray-500 mb-4">まだニュース記事がありません</p>
            <p class="text-sm text-gray-400">新しいニュースが追加されるまでお待ちください</p>
          </div>
        </div>
      </div>

      <noscript>
        <div class="row justify-center">
          <div class="lg:col-8">
            <div class="text-center py-16 bg-red-50 border border-red-200 rounded-xl">
              <p class="text-red-700 font-medium mb-2">JavaScriptが無効になっています</p>
              <p class="text-sm text-red-600">最新のニュースを表示するには、ブラウザの設定でJavaScriptを有効にしてください。</p>
            </div>
          </div>
        </div>
      </noscript>
    </div>
  </section>
</BaseLayout>

<script type="module" define:vars={{ firebaseConfig, baseDescription, baseTitle, siteName }}>
  import { initializeApp, getApps, getApp } from 'https://www.gstatic.com/firebasejs/10.7.1/firebase-app.js';
  import {
    getDatabase,
    ref,
    get,
    increment,
    update,
  } from 'https://www.gstatic.com/firebasejs/10.7.1/firebase-database.js';
  import { marked } from 'https://cdn.jsdelivr.net/npm/marked@11.1.1/lib/marked.esm.js';

  marked.setOptions({
    gfm: true,
    breaks: true,
    mangle: false,
    headerIds: false,
  });

  function createSlug(text) {
    const normalized = text?.toString().trim() ?? '';
    const base = normalized
      .toLowerCase()
      .replace(/\s+/g, '-')
      .replace(/[^\p{Letter}\p{Number}\-ー]/gu, '');
    return base || `section-${Math.random().toString(36).slice(2, 8)}`;
  }

  function markdownToHtml(markdown) {
    const html = marked.parse(markdown || '');
    const template = document.createElement('template');
    template.innerHTML = html;

    const slugCounts = new Map();
    template.content.querySelectorAll('h1, h2, h3, h4, h5, h6').forEach((heading) => {
      const baseSlug = createSlug(heading.textContent || '');
      const count = slugCounts.get(baseSlug) || 0;
      const finalSlug = count ? `${baseSlug}-${count}` : baseSlug;
      slugCounts.set(baseSlug, count + 1);
      heading.id = finalSlug;
    });

    return template.innerHTML;
  }

  function markdownToPlain(markdown) {
    const html = marked.parse(markdown || '');
    const template = document.createElement('template');
    template.innerHTML = html;
    const text = template.content.textContent || '';
    return text.replace(/\s+/g, ' ').trim();
  }

  const firebaseApp = getApps().length ? getApp() : initializeApp(firebaseConfig);
  const database = getDatabase(firebaseApp, firebaseConfig.databaseURL || undefined);

  const ITEMS_PER_PAGE = 9;
  const RUNNER_KEY = '__newsPageRunner';

  const state = {
    allNews: [],
    filteredNews: [],
    currentPage: 1,
    currentCategory: 'all',
    currentSort: 'date-desc',
  };

  let eventController = new AbortController();

  function resetState() {
    state.allNews = [];
    state.filteredNews = [];
    state.currentPage = 1;
    state.currentCategory = 'all';
    state.currentSort = 'date-desc';
  }

  function getRoot() {
    return document.querySelector('[data-news-root]');
  }

  function getElements() {
    return {
      loadingEl: document.getElementById('news-loading'),
      listViewEl: document.getElementById('news-list-view'),
      detailViewEl: document.getElementById('news-detail-view'),
      notFoundEl: document.getElementById('news-not-found'),
      emptyEl: document.getElementById('news-empty'),
      categoryFiltersEl: document.getElementById('category-filters'),
      newsListEl: document.getElementById('news-list'),
      paginationEl: document.getElementById('pagination'),
      showingCountEl: document.getElementById('showing-count'),
      totalCountEl: document.getElementById('total-count'),
      sortSelectEl: document.getElementById('sort-select'),
      detailContentEl: document.getElementById('news-detail-content'),
      relatedNewsSectionEl: document.getElementById('related-news-section'),
      relatedNewsListEl: document.getElementById('related-news-list'),
      pageTitleEl: document.getElementById('page-title'),
      pageDescEl: document.getElementById('page-description'),
      breadcrumbCurrentEl: document.getElementById('breadcrumb-current'),
    };
  }

  function getRouteInfo() {
    const basePath = '/news';
    const path = window.location.pathname.replace(/\/+$, '');
    let slug = '';
    if (path.startsWith(basePath)) {
      slug = decodeURIComponent(path.slice(basePath.length)).replace(/^\/+/, '');
    }
    return {
      isDetail: slug.length > 0,
      slug,
    };
  }

  function ensureMeta(name, content, property = false) {
    const selector = property ? `meta[property="${name}"]` : `meta[name="${name}"]`;
    let el = document.querySelector(selector);
    if (!el) {
      el = document.createElement('meta');
      if (property) {
        el.setAttribute('property', name);
      } else {
        el.setAttribute('name', name);
      }
      document.head.appendChild(el);
    }
    el.setAttribute('content', content);
  }

  function removeStructuredData() {
    document.querySelectorAll('script[data-dynamic-ld]').forEach((script) => script.remove());
  }

  function injectArticleStructuredData(entry, description) {
    const primaryDate = entry.publishedAt || entry.date;
    const secondaryDate = entry.updatedAt || entry.date;
    const jsonLd = {
      '@context': 'https://schema.org',
      '@type': 'NewsArticle',
      headline: entry.title,
      description,
      image: entry.image ? [entry.image] : undefined,
      datePublished: primaryDate ? new Date(primaryDate).toISOString() : undefined,
      dateModified: secondaryDate ? new Date(secondaryDate).toISOString() : undefined,
      author: (entry.authors || []).map((name) => ({ '@type': 'Person', name })),
      publisher: {
        '@type': 'Organization',
        name: siteName,
        logo: {
          '@type': 'ImageObject',
          url: `${window.location.origin}/logo.png`,
        },
      },
      mainEntityOfPage: {
        '@type': 'WebPage',
        '@id': `${window.location.origin}/news/${entry.slug || entry.id}/`,
      },
    };

    const script = document.createElement('script');
    script.type = 'application/ld+json';
    script.dataset.dynamicLd = 'article';
    script.textContent = JSON.stringify(jsonLd, null, 2);
    document.head.appendChild(script);
  }

  function injectItemListStructuredData(entries) {
    if (!entries.length) return;
    const jsonLd = {
      '@context': 'https://schema.org',
      '@type': 'ItemList',
      itemListElement: entries.map((entry, index) => ({
        '@type': 'ListItem',
        position: index + 1,
        url: `${window.location.origin}/news/${entry.slug || entry.id}/`,
        name: entry.title,
      })),
    };

    const script = document.createElement('script');
    script.type = 'application/ld+json';
    script.dataset.dynamicLd = 'itemlist';
    script.textContent = JSON.stringify(jsonLd, null, 2);
    document.head.appendChild(script);
  }

  function updateHeadForList(totalCount) {
    const title = `${baseTitle} | ${siteName}`;
    document.title = title;
    ensureMeta('description', baseDescription);
    ensureMeta('og:title', title, true);
    ensureMeta('og:description', `${baseDescription}（全${totalCount}件）`, true);
    ensureMeta('og:type', 'website', true);
    ensureMeta('twitter:card', 'summary_large_image');

    let canonical = document.querySelector('link[rel="canonical"]');
    if (!canonical) {
      canonical = document.createElement('link');
      canonical.setAttribute('rel', 'canonical');
      document.head.appendChild(canonical);
    }
    canonical.setAttribute('href', `${window.location.origin}/news/`);

    removeStructuredData();
    injectItemListStructuredData(state.filteredNews.slice(0, Math.min(10, state.filteredNews.length)));
  }

  function updateHeadForArticle(entry, description) {
    const title = `${entry.title} | ${siteName}`;
    document.title = title;

    ensureMeta('description', description);
    ensureMeta('og:title', entry.title, true);
    ensureMeta('og:description', description, true);
    ensureMeta('og:type', 'article', true);
    if (entry.image) {
      ensureMeta('og:image', entry.image, true);
      ensureMeta('twitter:image', entry.image);
    }
    ensureMeta('twitter:card', 'summary_large_image');

    let canonical = document.querySelector('link[rel="canonical"]');
    if (!canonical) {
      canonical = document.createElement('link');
      canonical.setAttribute('rel', 'canonical');
      document.head.appendChild(canonical);
    }
    canonical.setAttribute('href', `${window.location.origin}/news/${entry.slug || entry.id}/`);

    removeStructuredData();
    injectArticleStructuredData(entry, description);
  }

  function toggleView(view) {
    const {
      loadingEl,
      listViewEl,
      detailViewEl,
      notFoundEl,
      emptyEl,
    } = getElements();

    if (loadingEl) loadingEl.classList.toggle('hidden', view !== 'loading');
    if (listViewEl) listViewEl.classList.toggle('hidden', view !== 'list');
    if (detailViewEl) detailViewEl.classList.toggle('hidden', view !== 'detail');
    if (notFoundEl) notFoundEl.classList.toggle('hidden', view !== 'notFound');
    if (emptyEl) emptyEl.classList.toggle('hidden', view !== 'empty');
  }

  function sortEntries(entries) {
    const sortKey = state.currentSort;
    return [...entries].sort((a, b) => {
      if (sortKey === 'date-asc') {
        return new Date(a.date).getTime() - new Date(b.date).getTime();
      }
      if (sortKey === 'priority') {
        return (b.priority || 0) - (a.priority || 0);
      }
      if (sortKey === 'views') {
        return (b.views || 0) - (a.views || 0);
      }
      if ((b.priority || 0) !== (a.priority || 0)) {
        return (b.priority || 0) - (a.priority || 0);
      }
      return new Date(b.date).getTime() - new Date(a.date).getTime();
    });
  }

  function renderCategoryFilters() {
    const { categoryFiltersEl } = getElements();
    if (!categoryFiltersEl) return;

    const categories = [...new Set(state.allNews.flatMap((entry) => entry.categories || []))]
      .filter(Boolean)
      .sort((a, b) => a.localeCompare(b, 'ja'));

    const buildButton = (category, label, count, active) => {
      const baseClass = 'category-filter px-4 py-2 rounded-full text-sm font-medium transition-all duration-200';
      const activeClass = 'bg-purple-600 text-white';
      const inactiveClass = 'bg-white text-gray-700 hover:bg-purple-100';
      return `<button data-category="${category}" class="${baseClass} ${active ? activeClass : inactiveClass}">
        ${label} (${count})
      </button>`;
    };

    const allButton = buildButton('all', 'すべて', state.allNews.length, state.currentCategory === 'all');

    const categoryButtons = categories
      .map((category) => {
        const count = state.allNews.filter((entry) => entry.categories?.includes(category)).length;
        return buildButton(category, category, count, state.currentCategory === category);
      })
      .join('');

    categoryFiltersEl.innerHTML = `${allButton}${categoryButtons}`;
  }

  function applyFilters() {
    const baseEntries = state.currentCategory === 'all'
      ? [...state.allNews]
      : state.allNews.filter((entry) => entry.categories?.includes(state.currentCategory));
    return sortEntries(baseEntries);
  }

  function renderNewsList() {
    const { newsListEl, showingCountEl, totalCountEl } = getElements();
    if (!newsListEl || !showingCountEl || !totalCountEl) return;

    const totalPages = Math.max(1, Math.ceil(state.filteredNews.length / ITEMS_PER_PAGE));
    if (state.currentPage > totalPages) {
      state.currentPage = totalPages;
    }

    const startIndex = (state.currentPage - 1) * ITEMS_PER_PAGE;
    const endIndex = startIndex + ITEMS_PER_PAGE;
    const visibleNews = state.filteredNews.slice(startIndex, endIndex);

    newsListEl.innerHTML = visibleNews.map((news) => {
      const internalSlug = news.slug || news.id;
      const href = internalSlug ? `/news/${internalSlug}/` : '#news';
      const publishedDate = news.date
        ? new Date(news.date).toLocaleDateString('ja-JP')
        : '';
      const datetimeAttr = news.date ? new Date(news.date).toISOString() : '';
      return `
        <div class="news-item flex justify-center">
          <div class="w-full max-w-sm">
            <a href="${href}" class="block glass rounded-lg overflow-hidden hover:shadow-lg transition-all">
              <article class="p-6">
                ${news.featured ? '<span class="inline-block px-2 py-1 text-xs font-semibold text-white bg-purple-600 rounded mb-2">注目</span>' : ''}
                <h2 class="text-xl font-bold mb-2">${news.title || ''}</h2>
                <p class="text-gray-600 text-sm mb-4 line-clamp-2">${news.description || ''}</p>
                <div class="flex flex-wrap gap-2 text-xs">
                  ${publishedDate ? `<span class="text-gray-500"><time datetime="${datetimeAttr}">${publishedDate}</time></span>` : ''}
                  ${news.views ? `<span class="text-gray-500">👁 ${news.views}</span>` : ''}
                  ${(news.categories || []).map((cat) => `<span class="px-2 py-1 bg-purple-100 text-purple-800 rounded">${cat}</span>`).join('')}
                </div>
              </article>
            </a>
          </div>
        </div>
      `;
    }).join('');

    showingCountEl.textContent = String(Math.min(endIndex, state.filteredNews.length));
    totalCountEl.textContent = String(state.filteredNews.length);
  }

  function renderPagination() {
    const { paginationEl } = getElements();
    if (!paginationEl) return;

    const totalPages = Math.ceil(state.filteredNews.length / ITEMS_PER_PAGE);
    if (totalPages <= 1) {
      paginationEl.innerHTML = '';
      return;
    }

    const pages = Array.from({ length: totalPages }, (_, index) => index + 1);
    paginationEl.innerHTML = `
      <li>
        <button class="pagination-prev px-3 py-2 rounded-md bg-white text-gray-700 border border-gray-300 hover:bg-gray-50 ${state.currentPage === 1 ? 'opacity-50 cursor-not-allowed' : ''}" ${state.currentPage === 1 ? 'disabled' : ''}>
          <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
          </svg>
        </button>
      </li>
      ${pages.map((page) => `
        <li>
          <button data-page="${page}" class="pagination-btn px-4 py-2 rounded-md ${page === state.currentPage ? 'bg-purple-600 text-white' : 'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50'}">
            ${page}
          </button>
        </li>
      `).join('')}
      <li>
        <button class="pagination-next px-3 py-2 rounded-md bg-white text-gray-700 border border-gray-300 hover:bg-gray-50 ${state.currentPage === totalPages ? 'opacity-50 cursor-not-allowed' : ''}" ${state.currentPage === totalPages ? 'disabled' : ''}>
          <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
          </svg>
        </button>
      </li>
    `;
  }

  function renderListView() {
    renderCategoryFilters();
    state.filteredNews = applyFilters();

    if (!state.filteredNews.length) {
      const { showingCountEl, totalCountEl } = getElements();
      if (showingCountEl) showingCountEl.textContent = '0';
      if (totalCountEl) totalCountEl.textContent = '0';
      toggleView('empty');
      return;
    }

    renderNewsList();
    renderPagination();
    updateHeadForList(state.filteredNews.length);

    const { pageTitleEl, pageDescEl, breadcrumbCurrentEl } = getElements();
    if (pageTitleEl) pageTitleEl.textContent = 'ニュース';
    if (pageDescEl) pageDescEl.textContent = baseDescription;
    if (breadcrumbCurrentEl) breadcrumbCurrentEl.textContent = 'ニュース';

    toggleView('list');
  }

  function renderRelatedNews(currentId) {
    const { relatedNewsSectionEl, relatedNewsListEl } = getElements();
    if (!relatedNewsSectionEl || !relatedNewsListEl) return;

    const related = state.allNews
      .filter((entry) => entry.id !== currentId)
      .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())
      .slice(0, 3);

    if (!related.length) {
      relatedNewsSectionEl.classList.add('hidden');
      relatedNewsListEl.innerHTML = '';
      return;
    }

    relatedNewsSectionEl.classList.remove('hidden');
    relatedNewsListEl.innerHTML = related.map((news) => {
      const internalSlug = news.slug || news.id;
      const href = internalSlug ? `/news/${internalSlug}/` : '#news';
      const publishedDate = news.date
        ? new Date(news.date).toLocaleDateString('ja-JP')
        : '';
      const datetimeAttr = news.date ? new Date(news.date).toISOString() : '';
      return `
        <article class="bg-white/60 backdrop-blur-sm border border-purple-100/50 rounded-xl shadow-lg overflow-hidden hover:bg-white/80 transition-all duration-300">
          ${news.image ? `
            <a href="${href}" class="block aspect-video overflow-hidden bg-gray-100">
              <img
                src="${news.image}"
                alt="${news.title || ''}"
                class="w-full h-full object-cover hover:scale-105 transition-transform duration-200"
                loading="lazy"
              />
            </a>` : ''}
          <div class="p-5">
            <h3 class="text-base font-bold text-gray-900 mb-2 line-clamp-2">
              <a href="${href}" class="hover:text-purple-600 transition-colors">
                ${news.title || ''}
              </a>
            </h3>
            <p class="text-gray-600 text-sm mb-4 line-clamp-2 leading-relaxed">
              ${news.description || ''}
            </p>
            <div class="flex items-center justify-between text-xs text-gray-500 mb-4">
              ${publishedDate ? `<time datetime="${datetimeAttr}">${publishedDate}</time>` : '<span></span>'}
              ${(news.categories || []).slice(0, 1).map((cat) => `<span class="px-2 py-0.5 bg-purple-100 text-purple-800 rounded-full">${cat}</span>`).join('')}
            </div>
            <div class="flex items-center justify-end">
              <a href="${href}" class="text-purple-600 hover:text-purple-800 text-sm font-medium inline-flex items-center gap-1 group">
                続きを読む
                <svg class="w-3 h-3 group-hover:translate-x-0.5 transition-transform" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                </svg>
              </a>
            </div>
          </div>
        </article>
      `;
    }).join('');
  }

  function renderDetail(entry) {
    const {
      detailContentEl,
      pageTitleEl,
      pageDescEl,
      breadcrumbCurrentEl,
    } = getElements();

    if (!detailContentEl) return;

    const formattedDate = entry.date
      ? new Date(entry.date).toLocaleDateString('ja-JP', {
          year: 'numeric',
          month: 'long',
          day: 'numeric',
        })
      : '';
    const dateIso = entry.date ? new Date(entry.date).toISOString() : '';

    const authors = Array.isArray(entry.authors)
      ? entry.authors.join(', ')
      : entry.authors || '';

    const badgeHtml = `
      <div class="flex items-center gap-3 mb-6 flex-wrap">
        ${entry.featured ? `
          <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-purple-100 text-purple-800">
            特集記事
          </span>` : ''}
        ${(entry.categories || []).map((category) => `
          <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800">
            ${category}
          </span>
        `).join('')}
      </div>
    `;

    const metaHtml = `
      <div class="flex flex-wrap items-center gap-4 text-sm text-gray-600">
        ${formattedDate ? `
          <time datetime="${dateIso}" class="flex items-center gap-1">
            <svg class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
            </svg>
            ${formattedDate}
          </time>` : ''}
        ${entry.source ? `
          <span class="flex items-center gap-1">
            <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
              <path d="M2 5a2 2 0 012-2h12a2 2 0 012 2v10a2 2 0 01-2 2H4a2 2 0 01-2-2V5zm3.293 1.293a1 1 0 011.414 0l3 3a1 1 0 010 1.414l-3 3a1 1 0 01-1.414-1.414L7.586 10 5.293 7.707a1 1 0 010-1.414zM11 12a1 1 0 100 2h3a1 1 0 100-2h-3z" />
            </svg>
            ${entry.source}
          </span>` : ''}
        ${typeof entry.views === 'number' ? `
          <span class="flex items-center gap-1">
            <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
              <path d="M10 12a2 2 0 100-4 2 2 0 000 4z" />
              <path fill-rule="evenodd" d="M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z" clip-rule="evenodd" />
            </svg>
            ${entry.views} views
          </span>` : ''}
        ${authors ? `
          <span class="flex items-center gap-1">
            <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd" />
            </svg>
            ${authors}
          </span>` : ''}
      </div>
    `;

    const descriptionHtml = entry.description
      ? `
        <div class="mb-8 p-6 bg-gray-50 rounded-lg border-l-4 border-purple-500">
          <p class="text-lg text-gray-700 leading-relaxed">
            ${entry.description}
          </p>
        </div>
      `
      : '';

    const imageHtml = entry.image
      ? `
        <figure class="mb-10">
          <img
            src="${entry.image}"
            alt="${entry.imageAlt || entry.title || ''}"
            class="w-full rounded-lg shadow-lg"
            loading="eager"
          />
        </figure>
      `
      : '';

    const bodyHtml = `
      <div class="prose prose-lg max-w-none mb-10">
        <div>${markdownToHtml(entry.body || '')}</div>
      </div>
    `;

    const externalLinkHtml = entry.externalLink
      ? `
        <div class="mb-10 p-4 bg-blue-50 rounded-lg border border-blue-200">
          <p class="text-sm text-blue-800 mb-2">外部リンク：</p>
          <a href="${entry.externalLink}" target="_blank" rel="noopener noreferrer"
             class="text-blue-600 hover:text-blue-800 underline inline-flex items-center gap-1">
            ${entry.externalLink}
            <svg class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
            </svg>
          </a>
        </div>
      `
      : '';

    const tagsHtml = (entry.tags || []).length
      ? `
        <div class="flex flex-wrap gap-2 mb-10">
          ${(entry.tags || []).map((tag) => `
            <span class="px-3 py-1 bg-gray-100 text-gray-700 text-sm rounded-full">
              #${tag}
            </span>
          `).join('')}
        </div>
      `
      : '';

    const detailContentEl = getElements().detailContentEl;
    if (!detailContentEl) return;

    detailContentEl.innerHTML = `
      <header class="mb-10">
        ${badgeHtml}
        <h1 class="text-3xl lg:text-4xl font-bold text-gray-900 mb-6">
          ${entry.title || ''}
        </h1>
        ${metaHtml}
      </header>
      ${imageHtml}
      ${descriptionHtml}
      ${bodyHtml}
      ${externalLinkHtml}
      ${tagsHtml}
      <div class="border-t border-gray-200 pt-8">
        <a href="/news/" class="inline-flex items-center gap-2 text-purple-600 hover:text-purple-800 transition-colors">
          <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16l-4-4m0 0l4-4m-4 4h18" />
          </svg>
          ニュース一覧に戻る
        </a>
      </div>
    `;

    const { pageTitleEl, pageDescEl, breadcrumbCurrentEl } = getElements();
    if (pageTitleEl) pageTitleEl.textContent = entry.title || 'ニュース';
    if (pageDescEl) pageDescEl.textContent = entry.description || baseDescription;
    if (breadcrumbCurrentEl) breadcrumbCurrentEl.textContent = entry.title || '詳細';

    const description = entry.description || markdownToPlain(entry.body || '').slice(0, 120);
    updateHeadForArticle(entry, description);
    renderRelatedNews(entry.id);
    toggleView('detail');
  }

  async function incrementViews(id) {
    if (!id) return;
    try {
      const targetRef = ref(database, `cms/news/${id}`);
      await update(targetRef, { views: increment(1) });
    } catch (error) {
      console.warn('Failed to increment news views:', error);
    }
  }

  function normalizeEntry(id, value) {
    if (!value || typeof value !== 'object') return null;
    const ensureString = (input) => (typeof input === 'string' ? input : input ? String(input) : '');
    const ensureArray = (input) => Array.isArray(input)
      ? input.filter((item) => item != null).map((item) => String(item))
      : input
        ? [String(input)]
        : [];
    const ensureNumber = (input, fallback = 0) => {
      if (typeof input === 'number' && Number.isFinite(input)) return input;
      const parsed = Number(input);
      return Number.isFinite(parsed) ? parsed : fallback;
    };

    return {
      id,
      slug: ensureString(value.slug) || id,
      title: ensureString(value.title),
      description: ensureString(value.description),
      date: ensureString(value.date),
      image: ensureString(value.image),
      imageAlt: ensureString(value.imageAlt) || ensureString(value.title),
      authors: ensureArray(value.authors),
      categories: ensureArray(value.categories),
      tags: ensureArray(value.tags),
      draft: Boolean(value.draft),
      body: ensureString(value.body),
      priority: ensureNumber(value.priority, 0),
      featured: Boolean(value.featured),
      externalLink: ensureString(value.externalLink),
      source: ensureString(value.source),
      views: ensureNumber(value.views, 0),
      publishedAt: ensureString(value.publishedAt),
      updatedAt: ensureString(value.updatedAt),
      createdAt: ensureString(value.createdAt),
    };
  }

  async function loadNews(routeInfo) {
    toggleView('loading');
    try {
      const snapshot = await get(ref(database, 'cms/news'));
      if (!snapshot.exists()) {
        resetState();
        toggleView('empty');
        return;
      }

      const raw = snapshot.val();
      state.allNews = Object.entries(raw)
        .map(([id, value]) => normalizeEntry(id, value))
        .filter((entry) => entry && !entry.draft);

      if (!state.allNews.length) {
        resetState();
        toggleView('empty');
        return;
      }

      if (routeInfo.isDetail) {
        const entry = state.allNews.find(
          (item) => item.slug === routeInfo.slug || item.id === routeInfo.slug,
        );
        if (!entry) {
          toggleView('notFound');
          return;
        }
        renderDetail(entry);
        await incrementViews(entry.id);
        return;
      }

      const url = new URL(window.location.href);
      const requestedCategory = url.searchParams.get('category');
      const requestedSort = url.searchParams.get('sort');

      state.currentCategory = requestedCategory || 'all';
      if (requestedSort && ['date-desc', 'date-asc', 'priority', 'views'].includes(requestedSort)) {
        state.currentSort = requestedSort;
      } else {
        state.currentSort = 'date-desc';
      }
      state.currentPage = 1;

      renderListView();
    } catch (error) {
      console.error('Failed to load news:', error);
      toggleView('notFound');
    }
  }

  function onCategoryFilterClick(event) {
    const target = event.target;
    if (!(target instanceof HTMLElement)) return;
    if (!target.classList.contains('category-filter')) return;

    state.currentCategory = target.dataset.category || 'all';
    state.currentPage = 1;
    renderListView();

    const url = new URL(window.location.href);
    if (state.currentCategory === 'all') {
      url.searchParams.delete('category');
    } else {
      url.searchParams.set('category', state.currentCategory);
    }
    history.replaceState({}, '', url.toString());
  }

  function onSortChange(event) {
    const target = event.target;
    if (!(target instanceof HTMLSelectElement)) return;
    state.currentSort = target.value;
    state.currentPage = 1;
    renderListView();
  }

  function onPaginationClick(event) {
    const target = event.target;
    if (!(target instanceof HTMLElement)) return;
    const button = target.closest('button');
    if (!(button instanceof HTMLButtonElement) || button.disabled) return;

    if (button.classList.contains('pagination-prev')) {
      state.currentPage = Math.max(1, state.currentPage - 1);
    } else if (button.classList.contains('pagination-next')) {
      const totalPages = Math.ceil(state.filteredNews.length / ITEMS_PER_PAGE);
      state.currentPage = Math.min(totalPages, state.currentPage + 1);
    } else if (button.dataset.page) {
      state.currentPage = Number(button.dataset.page);
    }

    renderListView();
    window.scrollTo({ top: 0, behavior: 'smooth' });
  }

  function resetEventBindings() {
    eventController.abort();
    eventController = new AbortController();
  }

  function bindEvents() {
    resetEventBindings();
    const signal = eventController.signal;
    const { categoryFiltersEl, sortSelectEl, paginationEl } = getElements();

    categoryFiltersEl?.addEventListener('click', onCategoryFilterClick, { signal });
    sortSelectEl?.addEventListener('change', onSortChange, { signal });
    paginationEl?.addEventListener('click', onPaginationClick, { signal });
  }

  const start = () => {
    const root = getRoot();
    if (!root) {
      resetEventBindings();
      return;
    }

    const { loadingEl, listViewEl, detailViewEl } = getElements();
    if (!loadingEl || !listViewEl || !detailViewEl) {
      return;
    }

    resetState();
    bindEvents();
    loadNews(getRouteInfo());
  };

  if (window[RUNNER_KEY]) {
    document.removeEventListener('astro:page-load', window[RUNNER_KEY]);
  }

  window[RUNNER_KEY] = () => start();

  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', window[RUNNER_KEY], { once: true });
  } else {
    window[RUNNER_KEY]();
  }

  document.addEventListener('astro:page-load', window[RUNNER_KEY]);
</script>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
