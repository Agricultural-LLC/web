---
interface Props {
  label: string;
  link?: string;
  newtab?: boolean;
  size?: "large" | "xlarge";
}

const { label, link, newtab = false, size = "large" }: Props = Astro.props;

const sizeClasses = {
  large: "px-6 py-3 text-base md:px-8 md:py-4 md:text-lg",
  xlarge: "px-8 py-4 text-lg md:px-12 md:py-6 md:text-xl"
};
---

<a 
  href={link} 
  target={newtab ? "_blank" : ""}
  class="no-underline block group transform transition-all duration-300 hover:scale-105 active:scale-95 touch-manipulation cta-button-float w-full"
>
  <div class={`
    bg-gradient-to-r from-green-600 via-blue-600 to-green-700
    hover:from-green-500 hover:via-blue-500 hover:to-green-600
    active:from-green-700 active:via-blue-700 active:to-green-800
    ${sizeClasses[size]}
    rounded-2xl font-bold text-white
    shadow-lg hover:shadow-2xl
    border-2 border-transparent hover:border-white/20
    transition-all duration-300
    intersect:animate-fadeUp opacity-0 intersect-no-queue
    cta-button-glow
    min-h-[44px] md:min-h-[56px]
    flex items-center justify-center
    w-full
  `}>
    <div class="flex items-center justify-center gap-2 md:gap-3">
      <span class="whitespace-nowrap">{label}</span>
      <svg 
        class="w-4 h-4 md:w-5 md:h-5 transform transition-transform duration-300 group-hover:translate-x-1" 
        fill="none" 
        stroke="currentColor" 
        viewBox="0 0 24 24"
      >
        <path 
          stroke-linecap="round" 
          stroke-linejoin="round" 
          stroke-width="2" 
          d="M13 7l5 5m0 0l-5 5m5-5H6"
        />
      </svg>
    </div>
  </div>
</a>
