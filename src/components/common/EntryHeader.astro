---
import { formatDate } from "@lib/formatDate";
import readingTime from "@lib/readingTime";
import {
lowerHumanize,
markdownify,
slugify,
upperHumanize,
} from "@lib/textConverter";
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";
import {
FaHashtag,
FaRegCalendarAlt,
FaRegClock,
FaRegFolder,
} from "react-icons/fa";

interface Props {
  entry: CollectionEntry<"blog">;
  showInfo?: boolean;
  showImage?: boolean;
  showTitle?: boolean;
  showDate?: boolean;
  showReadingTime?: boolean;
  showCategories?: boolean;
  showTags?: boolean;
}

const {
  entry,
  showInfo = true,
  showImage = false,
  showTitle = false,
  showDate = false,
  showReadingTime = false,
  showCategories = false,
  showTags = false,
}: Props = Astro.props;

const baseURL = import.meta.env.BASE_URL;

const {
  title,
  categories,
  tags,
  image,
  imageAlt,
  date,
  complexity,
} = entry;

categories?.sort((a: string, b: string) => a.localeCompare(b));
tags?.sort((a: string, b: string) => a.localeCompare(b));
---

<div class="mt-2">
  {
    image && showImage && (
      <div class="mb-8 glass rounded-lg intersect:animate-fadeDown opacity-0 intersect-no-queue">
        <Image
          class="w-full rounded-lg"
          src={image}
          alt={imageAlt || ""}
          height={500}
          width={1200}
          loading="eager"
        />
      </div>
    )
  }
  {
    showInfo && (
      <div class="glass mb-8 p-4 rounded-lg intersect:animate-fade opacity-0 intersect-no-queue">
        {showTitle && <h1 set:html={markdownify(title)} class="mb-4" />}
        <ul>
          {date && showDate && (
            <li class="mr-1 inline-block">
              <FaRegCalendarAlt className={"ml-2 -mt-1 inline-block"} />
              {formatDate(date)}
            </li>
          )}
          {complexity && complexity > 0 && showReadingTime && entry.body && (
            <li class="mr-1 inline-block">
              <FaRegClock className={"ml-2 -mt-1 inline-block"} />
              <span>{readingTime(entry.body, complexity)} min read</span>
            </li>
          )}
          {categories && showCategories && (
            <li class="mr-1 inline-block">
              {categories.map((category: string, index: number) => (
                <a href={`${baseURL}blog/categories/${slugify(category)}/`}>
                  <FaRegFolder className={"ml-2 -mt-1 inline-block"} />
                  {upperHumanize(category)}
                </a>
              ))}
            </li>
          )}
          {tags && showTags && (
            <li class="mr-1 inline-block">
              {tags.map((tag: string, index: number) => (
                <a href={`${baseURL}blog/tags/${slugify(tag)}/`}>
                  <FaHashtag className={"ml-2 -mt-1 inline-block"} />
                  {lowerHumanize(tag)}
                </a>
              ))}
            </li>
          )}
        </ul>
      </div>
    )
  }
</div> 
